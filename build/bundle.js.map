{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Playground/Cards/CardBack.svelte","../../src/components/Playground/Cards/CardFront.svelte","../../node_modules/svelte/store/index.mjs","../../src/store/OpenedCards.ts","../../src/store/Score.ts","../../src/store/Level.ts","../../src/components/GameAction/LevelUpdate.svelte","../../src/components/Playground/Cards/Card.svelte","../../src/components/GameAction/ScoreUpdate.svelte","../../src/components/GameAction/CloseOpenCards.svelte","../../src/store/User.ts","../../src/components/User/name/UserName.svelte","../../src/components/User/Header.svelte","../../src/components/User/Avatar/ImageAvatar.svelte","../../src/components/User/Avatar/Avatars.svelte","../../src/components/User/Start.svelte","../../src/components/User/UserGround.svelte","../../src/components/GameElements/Score.svelte","../../src/components/GameElements/Level.svelte","../../src/components/User/name/UserSelectName.svelte","../../src/components/User/Avatar/UserSelectAvatar.svelte","../../src/components/User/UserDetail.svelte","../../src/components/Playground/Wrapper/Playground.svelte","../../src/components/GameAction/ListCards.svelte","../../src/components/GameAction/MixCards.svelte","../../src/components/Docs/Section/Templates/Header.svelte","../../src/components/Docs/Section/Templates/Paragraph.svelte","../../src/components/Docs/Section/Templates/Image.svelte","../../src/components/Docs/Section/Templates/AccessArticle.svelte","../../src/components/Docs/AboutGame.svelte","../../src/components/Docs/Section/Templates/SubHeader.svelte","../../src/components/Docs/Section/Templates/FileTitle.svelte","../../node_modules/svelte-prism/src/beforeImport.js","../../node_modules/prismjs/prism.js","../../node_modules/prism-svelte/index.js","../../node_modules/svelte-prism/src/Prism.svelte","../../src/components/Docs/Section/Templates/CodeDescription/CodeSyntax.svelte","../../src/components/Docs/AvatarComponent.svelte","../../src/components/Docs/CardComponent.svelte","../../src/components/Docs/CommunicationBetweenComponent.svelte","../../src/components/Docs/Section/Templates/ChildTitle.svelte","../../src/components/Docs/Context.svelte","../../src/components/Docs/CreateASvelteProject.svelte","../../src/components/Docs/Section/Templates/Matter.svelte","../../src/components/Docs/ExamineSvelteStructure.svelte","../../src/components/Docs/GameInterface.svelte","../../src/components/Docs/GameRequirements.svelte","../../src/components/Docs/HeaderComponent.svelte","../../src/components/Docs/Hello.svelte","../../src/components/Docs/ModuleContext.svelte","../../src/components/Docs/NameComponent.svelte","../../src/components/Docs/Practice.svelte","../../src/components/Docs/Section/Templates/List.svelte","../../src/components/Docs/ProjectDependencies.svelte","../../src/components/Docs/Props.svelte","../../src/components/Docs/ReactiveUserComponent.svelte","../../src/components/Docs/ReactiveVariables.svelte","../../src/components/Docs/Slots.svelte","../../src/components/Docs/StartGame.svelte","../../src/components/Docs/Store.svelte","../../src/components/Docs/SvelteRun.svelte","../../src/components/Docs/UseOfComponent.svelte","../../src/components/Docs/UserComponent.svelte","../../src/components/Docs/VaribleAccess.svelte","../../src/components/Docs/WhatIsSvelte.svelte","../../src/components/Docs/ShowCardsInYourHand.svelte","../../src/components/Docs/CardSpinEffect.svelte","../../src/components/Docs/CardMatching.svelte","../../src/components/Docs/scoreAndLevelUpdates.svelte","../../src/components/Docs/UserDetailComponent.svelte","../../src/components/Docs/References.svelte","../../src/components/Info/about.svelte","../../src/components/shared/Pages.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let pokemon;\n</script>\n\n<div class=\"back\" on:click={() => dispatch(\"openCard\", pokemon)}>\n  <img\n    src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/0.png\"\n    class=\"single-poke\"\n    alt=\"card back on the playing field\"\n  />\n</div>\n\n<style>\n  .back {\n    width: 100px;\n    height: 100px;\n    backface-visibility: hidden;\n    transition: 0.6s;\n    transform-style: preserve-3d;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    transform: rotateY(0deg);\n    border-radius: 11px;\n  }\n\n  .back:hover {\n    cursor: pointer;\n  }\n\n  .single-poke {\n    border-radius: 11px;\n    background: #fff;\n    box-shadow: 2px 2px 4px #8c8c8c;\n  }\n</style>\n","<script>\n  export let pokemon;\n\n  $: pokemonId = pokemon.id;\n</script>\n\n<div class=\"front\">\n  <img\n    src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemonId}.png\"\n    alt=\"card front on the playing field\"\n    class=\"single-poke\"\n    pokemonDetail={pokemonId}\n  />\n</div>\n\n<style>\n  .front {\n    width: 100px;\n    height: 100px;\n    backface-visibility: hidden;\n    transition: 0.6s;\n    transform-style: preserve-3d;\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: rotateY(-180deg);\n  }\n\n  .single-poke {\n    border-radius: 11px;\n    background: #fff;\n    box-shadow: 2px 2px 4px #8c8c8c;\n  }\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\nexport const catchEmAll = writable([]);\nexport const openCardsCapsule = writable([]);\nexport const cardFlipperCapsule = writable([]);\n","import { writable } from \"svelte/store\";\nexport const score = writable(0);\n","import { writable } from \"svelte/store\";\nexport const level = writable(1);\n","<script context=\"module\">\n  import { level } from \"../../store/Level\";\n\n  export const levelUp = () => {\n    let getLevel;\n\n    level.subscribe((callLevel) => {\n      getLevel = callLevel;\n    });\n\n    let up = getLevel + 1;\n\n    setTimeout(level.set(up));\n  };\n</script>\n","<script>\n  import BackCardFace from \"./CardBack.svelte\";\n  import FrontCardFace from \"./CardFront.svelte\";\n  import {\n    openCardsCapsule,\n    cardFlipperCapsule,\n    catchEmAll,\n  } from \"../../../store/OpenedCards\";\n  import { scoreUp } from \"../../GameAction/ScoreUpdate.svelte\";\n  import { levelUp } from \"../../GameAction/LevelUpdate.svelte\";\n  import {\n    closeAllCards,\n    mismatchedCards,\n  } from \"../../GameAction/CloseOpenCards.svelte\";\n\n  export let pokemon;\n\n  $: pokemonId = pokemon.id;\n  $: pokemonNo = pokemon.no;\n\n  const openCard = (card) => {\n    let getPokemonNo = card.detail.no;\n    let getPokemonId = card.detail.id;\n\n    $openCardsCapsule = [getPokemonId, ...$openCardsCapsule];\n    $cardFlipperCapsule = [getPokemonNo, ...$cardFlipperCapsule];\n\n    if ($openCardsCapsule.length >= 2) {\n      const firstOpenCard = $openCardsCapsule[0];\n      const secondOpenCard = $openCardsCapsule[1];\n\n      if (firstOpenCard === secondOpenCard) {\n        $catchEmAll = [firstOpenCard, ...$catchEmAll];\n\n        scoreUp();\n\n        if ($catchEmAll.length === 5) {\n          closeAllCards(1000, levelUp);\n        }\n      }\n\n      mismatchedCards(500);\n    }\n  };\n</script>\n\n<main class=\"flip-container\">\n  <div\n    class=\"flipper\"\n    class:hover={$cardFlipperCapsule.includes(pokemonNo) ||\n      $catchEmAll.includes(pokemonId)}\n  >\n    <BackCardFace {pokemon} on:openCard={openCard} />\n    <FrontCardFace {pokemon} />\n  </div>\n</main>\n\n<style>\n  .flip-container {\n    perspective: 1000px;\n    transform-style: preserve-3d;\n    display: inline-block;\n    margin: 5px;\n    width: 100px;\n    height: 100px;\n  }\n\n  .flipper {\n    position: relative;\n  }\n</style>\n","<script context=\"module\">\n  import { score } from \"../../store/Score\";\n\n  export const scoreUp = () => {\n    let getScore;\n\n    score.subscribe((callScore) => {\n      getScore = callScore;\n    });\n\n    let up = getScore + 1;\n\n    score.set(up);\n  };\n</script>\n","<script context=\"module\">\n  import {\n    openCardsCapsule,\n    cardFlipperCapsule,\n    catchEmAll,\n  } from \"../../store/OpenedCards\";\n\n  export const mismatchedCards = (flipTime) => {\n    setTimeout(() => {\n      cardFlipperCapsule.set([]);\n      openCardsCapsule.set([]);\n    }, flipTime);\n  };\n\n  export const closeAllCards = (flipTime, callback) => {\n    setTimeout(() => {\n      catchEmAll.set([]);\n      cardFlipperCapsule.set([]);\n      openCardsCapsule.set([]);\n\n      callback();\n    }, flipTime);\n  };\n</script>\n","import { writable } from \"svelte/store\";\nexport class UserInfo {\n    constructor(name = writable(''), avatar = writable(''), isStart = writable(false)) {\n        this.name = name;\n        this.avatar = avatar;\n        this.isStart = isStart;\n    }\n}\nexport const userInfo = new UserInfo();\n","<script>\n  import { userInfo } from \"../../../store/User\";\n\n  const { name } = userInfo;\n</script>\n\n<div class=\"user\">\n  <input\n    type=\"text\"\n    name=\"name\"\n    placeholder=\"pika pika\"\n    class=\"name\"\n    bind:value={$name}\n  />\n</div>\n\n<style>\n  .name {\n    border-radius: 20px;\n    text-align: center;\n    margin-bottom: 30px;\n    padding: 8px 0;\n    width: 40%;\n  }\n\n  @media screen and (max-width: 800px) {\n    .name {\n      width: 75%;\n    }\n  }\n</style>\n","<div class=\"header\">\n  <h2>select your best pokemon and start catching!</h2>\n</div>\n\n<style>\n  .header {\n    padding: 5px 0;\n    margin-bottom: 15px;\n    border-bottom: 3px solid white;\n  }\n</style>\n","<script>\n  import { userInfo } from \"../../../store/User\";\n\n  const { avatar } = userInfo;\n\n  export let userSelectAvatar;\n\n  const avatarName = userSelectAvatar.match(/\\w*(?=.\\w+$)/)[0];\n</script>\n\n<img\n  src={userSelectAvatar}\n  alt=\"avatar\"\n  class=\"avatar unpicked\"\n  class:picked={avatarName === $avatar}\n  on:click={() => ($avatar = avatarName)}\n/>\n\n<style>\n  .avatar {\n    width: 100px;\n    border-radius: 100px;\n    justify-content: space-around;\n    margin: 0 25px 15px 0;\n    border: 2px solid #fff;\n    box-shadow: 0px 0px 3px black;\n    border: 2px solid whitesmoke;\n  }\n\n  .avatar:hover {\n    opacity: 1;\n    cursor: pointer;\n  }\n\n  .unpicked {\n    opacity: 0.8;\n  }\n\n  .picked {\n    opacity: 1;\n  }\n</style>\n","<script>\n  import ImageAvatar from \"./ImageAvatar.svelte\";\n\n  // avatar list\n  let sabuha = \"images/sabuha.jpg\";\n  let mohito = \"images/mohito.jpg\";\n  let pasa = \"images/pasa.jpg\";\n  let susi = \"images/susi.jpg\";\n  let limon = \"images/limon.jpg\";\n\n  const avatars = [pasa, mohito, sabuha, limon, susi];\n</script>\n\n<div class=\"avatars\">\n  {#each avatars as userSelectAvatar}\n    <ImageAvatar {userSelectAvatar} />\n  {/each}\n</div>\n\n<style>\n  .avatars {\n    display: flex;\n    justify-content: center;\n  }\n\n  @media screen and (max-width: 800px) {\n    .avatars {\n      display: block;\n    }\n  }\n</style>\n","<script>\n  import { userInfo } from \"../../store/User\";\n\n  const { name, avatar, isStart } = userInfo;\n\n  let isAvatarEmpty = false;\n  let isNameEmpty = false;\n\n  const startGame = () => {\n    if ($avatar === \"\") {\n      isAvatarEmpty = true;\n      return;\n    }\n\n    if ($name === \"\") {\n      isNameEmpty = true;\n      return;\n    }\n\n    $isStart = true;\n\n    console.log(\":::: start game ::::\");\n    console.log(`:: enjoy ${$name} ::`);\n  };\n</script>\n\n<div class=\"start\">\n  <button on:click={startGame}>Start</button>\n  <div class=\"avatarError visible\">\n    <span class=\"unvisible\" class:visible={$avatar === \"\" && isAvatarEmpty}\n      >please, select a avatar..</span\n    >\n  </div>\n  <div class=\"nameError visible\">\n    <span class=\"unvisible\" class:visible={$name === \"\" && isNameEmpty}\n      >please, enter a name..</span\n    >\n  </div>\n</div>\n\n<style>\n  .start button {\n    width: 70%;\n    cursor: pointer;\n    border-radius: 10px;\n    padding: 10px 0;\n    font-size: 18px;\n    border: 2px solid black;\n    background-color: purple;\n    color: white;\n    font-weight: bold;\n  }\n\n  .nameError,\n  .avatarError {\n    color: red;\n    font-size: 18px;\n  }\n\n  .unvisible {\n    display: none;\n  }\n\n  .visible {\n    display: block;\n  }\n\n  .start button:active {\n    border: 2px solid white;\n  }\n</style>\n","<script lang=\"ts\">\n  import UserName from \"./name/UserName.svelte\";\n  import Header from \"./Header.svelte\";\n  import Avatars from \"./Avatar/Avatars.svelte\";\n  import Start from \"./Start.svelte\";\n</script>\n\n<main>\n  <Header />\n  <Avatars />\n  <UserName />\n  <Start />\n</main>\n\n<style>\n  main {\n    background-color: #f5f5f5;\n    border-radius: 5px;\n    padding-bottom: 15px;\n    width: 1000px;\n  }\n\n  @media screen and (max-width: 800px) {\n    main {\n      width: 100%;\n    }\n  }\n</style>\n","<script>\n  import { score } from \"../../store/Score\";\n</script>\n\n<p>score: {$score}</p>\n\n<style>\n  p {\n    display: inline-block;\n    width: 35%;\n    border-radius: 10px;\n    padding: 6px 8px;\n    font-size: 18px;\n    border: 2px solid black;\n    background-color: purple;\n    color: white;\n    font-weight: bold;\n  }\n</style>\n","<script>\n  import { level } from \"../../store/Level\";\n</script>\n\n<p>level: {$level}</p>\n\n<style>\n  p {\n    display: inline-block;\n    width: 35%;\n    border-radius: 10px;\n    padding: 6px 8px;\n    font-size: 18px;\n    border: 2px solid black;\n    background-color: purple;\n    color: white;\n    font-weight: bold;\n  }\n</style>\n","<script>\n  import { userInfo } from \"../../../store/User\";\n\n  const { name } = userInfo;\n</script>\n\n<h3>{$name}</h3>\n\n<style>\n  h3 {\n    display: block;\n    margin: 0px auto;\n    border-radius: 10px;\n    padding: 2px 0;\n    font-size: 24px;\n  }\n</style>\n","<script lang=\"ts\">\n  import { userInfo } from \"../../../store/User\";\n  import { score } from \"../../../store/Score\";\n\n  const { avatar } = userInfo;\n  const setAvatar = `images/${$avatar}.jpg`;\n\n  $: degreeOfScore = (userScore: number) => {\n    const dashOffsetDegree = 314; //  (2PI * stroke-dash array)\n    const totalCardsOnPlayground = 5;\n    const pieceOfDegree = dashOffsetDegree / totalCardsOnPlayground;\n    const isAllCardsOpen = userScore % totalCardsOnPlayground === 0;\n\n    let degree = isAllCardsOpen\n      ? dashOffsetDegree\n      : dashOffsetDegree - pieceOfDegree * (userScore % 5);\n\n    return degree;\n  };\n\n  $: scoreDegree = degreeOfScore($score);\n</script>\n\n<svg width=\"150\" height=\"120\" stroke-dashoffset={scoreDegree}>\n  <defs>\n    <pattern id=\"image\" patternUnits=\"userSpaceOnUse\" height=\"150\" width=\"150\">\n      <image x=\"0\" y=\"0\" height=\"150\" width=\"150\" xlink:href={setAvatar} />\n    </pattern>\n  </defs>\n  <circle\n    id=\"top\"\n    cx=\"75\"\n    cy=\"60\"\n    r=\"50\"\n    fill=\"url(#image)\"\n    stroke=\"#6a0dad\"\n    stroke-width=\"8\"\n  />\n</svg>\n\n<style>\n  svg {\n    stroke-dasharray: 314; /* (2PI * stroke-dash array) */\n  }\n</style>\n","<script>\n  import Score from \"../GameElements/Score.svelte\";\n  import Level from \"../GameElements/Level.svelte\";\n  import Name from \"./name/UserSelectName.svelte\";\n  import UserSelectAvatar from \"./Avatar/UserSelectAvatar.svelte\";\n</script>\n\n<main>\n  <UserSelectAvatar />\n  <Name />\n  <Score />\n  <Level />\n</main>\n\n<style>\n  main {\n    width: 300px;\n    margin-top: 20px;\n    margin: 20px auto;\n    padding: 20px 10px;\n    background-color: #f5f5f5;\n    border-radius: 6px;\n    display: block;\n  }\n</style>\n","<script>\n  import Card from \"../Cards/Card.svelte\";\n  import UserGround from \"../../User/UserGround.svelte\";\n  import { userInfo } from \"../../../store/User\";\n  import UserDetail from \"../../User/UserDetail.svelte\";\n  import { shuffle } from \"../../GameAction/MixCards.svelte\";\n  import { list } from \"../../GameAction/ListCards.svelte\";\n  import { level } from \"../../../store/Level\";\n\n  const { isStart } = userInfo;\n  $: pokemonList = list($level);\n  $: mixedListOfPokemon = shuffle(pokemonList);\n</script>\n\n<main class=\"playground\">\n  {#if $isStart}\n    {#each mixedListOfPokemon as pokemon}\n      <Card {pokemon} />\n    {/each}\n\n    <UserDetail />\n  {:else}\n    <UserGround />\n  {/if}\n</main>\n\n<style>\n  .playground {\n    width: 1000px;\n    margin: 0 auto;\n    text-align: center;\n  }\n\n  @media screen and (max-width: 800px) {\n    .playground {\n      width: 100%;\n    }\n  }\n</style>\n","<script context=\"module\">\n  export const list = (level) => {\n    const list = [];\n    const range = 5;\n    const maxNumberReachedOnRange = level * range;\n    let minNumberReachedOnRange = maxNumberReachedOnRange - 4;\n\n    for (\n      minNumberReachedOnRange;\n      minNumberReachedOnRange <= maxNumberReachedOnRange;\n      minNumberReachedOnRange++\n    ) {\n      list.push(minNumberReachedOnRange);\n    }\n\n    return list;\n  };\n</script>\n","<script context=\"module\">\n  export const shuffle = (pokemonList) => {\n    let shakeList = [];\n    const duplicateList = pokemonList.concat(pokemonList);\n    const totalNumberRange = duplicateList.length - 1;\n\n    for (let counter = 0; counter <= totalNumberRange; counter++) {\n      let pokemonNo = counter;\n      const randomNumb = Math.trunc(Math.random() * duplicateList.length);\n\n      shakeList = [\n        { no: pokemonNo, id: duplicateList[randomNumb] },\n        ...shakeList,\n      ];\n\n      duplicateList.splice(duplicateList.indexOf(duplicateList[randomNumb]), 1);\n    }\n\n    return shakeList;\n  };\n</script>\n","<script>\n  export let head;\n</script>\n\n<h2>🪁 {head}</h2>\n\n<style>\n  h2 {\n    font-size: 1.5em;\n  }\n\n  @media screen and (max-width: 800px) {\n    h2 {\n      font-size: 2rem;\n      text-align: center;\n    }\n  }\n</style>\n","<script>\n  export let text;\n\n  const textData = text;\n</script>\n\n<p>{@html textData}</p>\n\n<style>\n  p {\n    font-size: 16px;\n    text-indent: 20px;\n  }\n\n  @media screen and (max-width: 800px) {\n    p {\n      font-size: 18px;\n    }\n  }\n</style>\n","<script>\n  export let image;\n  export let alternativeText;\n</script>\n\n<img src={image} alt={alternativeText} title={alternativeText} />\n\n<style>\n  img {\n    display: flex;\n    width: 90%;\n    margin: 10px auto;\n    border-radius: 5px;\n  }\n\n  @media screen and (max-width: 800px) {\n    img {\n      width: 100%;\n    }\n  }\n</style>\n","<script>\n  export let link;\n</script>\n\n<span id={link} />\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `About the game`,\n    description: `In our project we will develop a memory game. There will be\n      different cards on the interface according to the level of the user. When\n      the card click event occurs, the cards will be opened and the user will\n      try to match the opened cards. While the matching cards are open on the\n      interface, the user will gain points as a result of a successful match,\n      cards will be closed again in their place with each unsuccessful match.`,\n    otherDescription: `At the start of the game, the user will be expected to\n      enter a username and choose one of the images in the avatar list (No \n      matter how tame the avatars look, the power is hidden in them 🐱‍👤). These\n      selected values will be displayed together with the <code><i>score &\n      level</i></code> values under the section where the cards are located in\n      the game interface. While the username and selected avatar will be kept as\n      stable values, the <code><i>score & level</i></code>values will be\n      dynamically updated according to the correct choices made by the user.`,\n    image: `assets/documentation/playground.png`,\n    alternativeText: `view of cards on the playground`,\n    otherImage: `assets/userground.png`,\n    otherImageAlternativeText: `view user component on the playground`,\n    id: \"about-the-game\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.otherDescription} />\n  <Image\n    image={article.otherImage}\n    alternativeText={article.otherImageAlternativeText}\n  />\n</article>\n","<script>\n  export let head;\n</script>\n\n<h3>🪁 {head}</h3>\n\n<style>\n  h3 {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 800px) {\n    h3 {\n      font-size: 1.5rem;\n      text-align: center;\n    }\n  }\n</style>\n","<script>\n  export let title;\n</script>\n\n<code>\n  <i>{title !== \"\" ? title : \"\"}</i>\n</code>\n\n<style>\n  i {\n    color: #905;\n  }\n</style>\n","if (window.Prism)\n    console.warn('Prism has already been initiated. Please ensure that svelte-prism is imported first.')\n\nwindow.Prism = window.Prism || {}\nwindow.Prism.manual = true","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","const blocks = '(if|else if|await|then|catch|each|html|debug)';\n\nPrism.languages.svelte = Prism.languages.extend('markup', {\n\teach: {\n\t\tpattern: new RegExp(\n\t\t\t'{[#/]each' +\n\t\t\t\t'(?:(?:\\\\{(?:(?:\\\\{(?:[^{}])*\\\\})|(?:[^{}]))*\\\\})|(?:[^{}]))*}'\n\t\t),\n\t\tinside: {\n\t\t\t'language-javascript': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(as[\\s\\S]*)\\([\\s\\S]*\\)(?=\\s*\\})/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(as[\\s]*)[\\s\\S]*(?=\\s*)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(#each[\\s]*)[\\s\\S]*(?=as)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeyword: /[#/]each|as/,\n\t\t\tpunctuation: /{|}/,\n\t\t},\n\t},\n\tblock: {\n\t\tpattern: new RegExp(\n\t\t\t'{[#:/@]/s' +\n\t\t\t\tblocks +\n\t\t\t\t'(?:(?:\\\\{(?:(?:\\\\{(?:[^{}])*\\\\})|(?:[^{}]))*\\\\})|(?:[^{}]))*}'\n\t\t),\n\t\tinside: {\n\t\t\tpunctuation: /^{|}$/,\n\t\t\tkeyword: [new RegExp('[#:/@]' + blocks + '( )*'), /as/, /then/],\n\t\t\t'language-javascript': {\n\t\t\t\tpattern: /[\\s\\S]*/,\n\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t},\n\t\t},\n\t},\n\ttag: {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?:\"[^\"]*\"|'[^']*'|{[\\s\\S]+?}(?=[\\s/>])))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\ttag: {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^<\\/?/,\n\t\t\t\t\tnamespace: /^[^\\s>\\/:]+:/,\n\t\t\t\t},\n\t\t\t},\n\t\t\t'language-javascript': {\n\t\t\t\tpattern: /\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\}/,\n\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t'language-javascript': {\n\t\t\t\t\t\tpattern: /{[\\s\\S]+}/,\n\t\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tpunctuation: /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\tnamespace: /^[^\\s>\\/:]+:/,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t'language-javascript': {\n\t\tpattern: /\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\}/,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages['javascript'],\n\t},\n});\n\nPrism.languages.svelte['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.svelte['entity'];\n\nPrism.hooks.add('wrap', env => {\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.svelte.tag, 'addInlined', {\n\tvalue: function addInlined(tagName, lang) {\n\t\tconst includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang],\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tconst inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside,\n\t\t\t},\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang],\n\t\t};\n\n\t\tconst def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(\n\t\t\t\t\t/__/g,\n\t\t\t\t\ttagName\n\t\t\t\t),\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside,\n\t\t};\n\n\t\tPrism.languages.insertBefore('svelte', 'cdata', def);\n\t},\n});\n\nPrism.languages.svelte.tag.addInlined('style', 'css');\nPrism.languages.svelte.tag.addInlined('script', 'javascript');\n","<script context=\"module\">\n  import _prism from \"./import\";\n  export const prism = _prism;\n  export const highlight = _prism.highlightElement;\n  export const globalConfig = { transform: (x) => x };\n</script>\n\n<script>\n  import \"prism-svelte\";\n\n  export let language = \"javascript\";\n  export let source = \"\";\n  export let transform = (x) => x;\n  let element, formattedCode;\n\n  $: $$props && (source || element) && highlightCode();\n\n  function highlightCode() {\n    const grammar = prism.languages[language];\n    let body = source || element.textContent;\n    body = globalConfig.transform(body);\n    body = transform(body);\n    formattedCode = language === \"none\" ? body : prism.highlight(body, grammar, language);\n  }\n</script>\n\n<code bind:this={element} style=\"display:none\">\n  <slot />\n</code>\n\n<pre class=\"language-{language}\" command-line data-output=\"2-17\"><code class=\"language-{language}\"\n    >{#if language === \"none\"}{formattedCode}{:else}{@html formattedCode}{/if}</code\n  ></pre>\n","<script>\n  import FileTitle from \"../FileTitle.svelte\";\n  import Prism from \"svelte-prism\";\n\n  export let code;\n  export let title;\n</script>\n\n<FileTitle {title} />\n<Prism language=\"svelte\" source={code} />\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Avatar Component`,\n    description: `Since we will need more than one component in the\n      <code><i>Avatar component</i></code>, let's create a folder and define\n      all the components it needs in the folder. \n      <a href=\"https://github.com/kahilkubilay/remember-em-all/tree/master/public/images\">\n      You can access the images we will use in the components here. </a>`,\n    otherDescription: `Let's call the <code><i>Avatars.svelte</i></code> file in\n      <code><i>Userground.svelte Avatars.svelte</code></i> will act as a\n      container to the <code><i>ImageAvatar.svelte</i></code> component. It will\n      also send data to the <code><i>ImageAvatar.svelte</i></code> component.`,\n    anotherDescription: `These two beauties will come up when I call\n      <code><i>Avatars on Userground</i></code>.`,\n    moreDescription: `Here we turn the <code>i>Avatars component</i></code> into\n      a more functional structure.`, //💩\n    oneMoreDescription: `We access every element of the <b>avatars</b> array we\n      created in the <b>#each</b> loop on html. We pass the information of each\n      accessed element to the <code><i>ImageAvatar component</i></code>.\n      Together with these values transferred to the component, we will get the\n      image of each element in the array.`, //💩\n    oneAnotherMoreDescription: `We deserve a better view. We should make some\n      adjustments with CSS on the avatars.`, //💩\n    codeExplanation: `If you are not calling the images you will use from the\n      remote server, you can keep them under the public folder. When you want to\n      use it, you can use it with a path like <b>images/image-name.png<b>\n      without including the public folder.`,\n    image: `assets/components/User/avatars-component.png`,\n    anotherImage: `assets/components/User/user-component-end.png`,\n    alternativeText: `call Avatar Component`,\n    anotherAlternativeText: `call User Component`,\n    id: \"avatar-component\",\n  };\n\n  const code = `\n    <script>\n      // avatar list\n      let sabuha = \"images/sabuha.jpg\";\n      let pasa = \"images/pasa.jpg\";  \n    <\\/script>\n\n    <div class=\"avatars\">\n      <img src={sabuha} alt=\"\" />\n      <img src={pasa} alt=\"\" />\n    </div>\n\n    <style>\n      img {\n        width: 100px;\n      }\n    </style>\n  `;\n\n  const otherCode = `\n    <script>\n      ...\n      // avatar list\n      let sabuha = \"images/sabuha.jpg\";\n      let mohito = \"images/mohito.jpg\";\n      let pasa = \"images/pasa.jpg\";\n      let susi = \"images/susi.jpg\";\n      let limon = \"images/limon.jpg\";\n\n      const avatars = [pasa, mohito, sabuha, limon, susi];\n    <\\/script>\n\n    <div class=\"avatars\">\n      {#each avatars as userAvatar}\n        <ImageAvatar {userAvatar} />\n      {/each}\n    </div>\n\n    <style>\n      .avatars {\n        display: flex;\n        justify-content: center;\n      }\n    </style>\n  `;\n\n  const moreCode = `\n    <script>\n      export let userAvatar;\n    <\\/script>\n\n    <img src={avatar} class=\"avatar unpicked\" alt=\"avatar\" />\n\n    <style>\n      .avatar {\n        width: 100px;\n        border-radius: 100px;\n        justify-content: space-around;\n        margin: 0 25px 15px 0;\n        border: 2px solid #fff;\n        box-shadow: 0px 0px 3px black;\n        border: 2px solid whitesmoke;\n      }\n  \n      .avatar:hover {\n        opacity: 1;\n        cursor: pointer;\n      }\n      \n      .unpicked {\n        opacity: 0.8;\n      }\n      \n      .picked {\n        opacity: 1;\n      }\n    </style>\n  `; // 💩\n\n  const title = `User > Avatar > Avatars.svelte`;\n  const otherTitle = `User > Avatar > Avatars.svelte`;\n  const moreTitle = `User > Avatar > ImageAvatar.svelte`; // 💩\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.codeExplanation} />\n  <Paragraph text={article.anotherDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Paragraph text={article.oneMoreDescription} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <Paragraph text={article.oneAnotherMoreDescription} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.anotherAlternativeText}\n  />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Card Component`,\n    description: `We will need components for the cards we will use in the\n      playground. While we will hold the pokemon image of the card in the\n      <code><i>CardFront component</i></code>, we will hold the question mark\n      ('?') image in the <code><i>CardBack component</i></code>. The common\n      container for both components will be the <code><i>Card\n      component</i></code>.`,\n    otherDescription: `While testing the <code><i>Card component</i></code>,\n      let's change the <b>isStart</b> condition in the <code><i>Playground\n      component</i></code> to <b>true</b> in order not to constantly choose\n      names and avatars on the <code><i>User component</i></code>.`,\n    anotherDescription: `An API address is given as the <b>img src attribute</b>\n      in the images in the <code><i>CardFront component</i></code>. By updating\n      the numbers in the filenames in this API, different pokemon images can be\n      accessed.`,\n    anAnotherDescription: `Let's call the <code><i>CardFront\n      component</i></code> in the <code><i>Card component</i></code> first, and\n      the <code><i>Card component</i></code> in the block that returns\n      <b>true</b> in the Playground. By repeating the same process in the\n      <code><i>CardBack component</i></code>, we will be able to examine every\n      update we have made on the <code><i>Card components</i></code>.`, // 💩\n    moreAnotherDescription: `<code><i>Card components</i></code> are\n      block-elements, so they stand one after the other. Take the components\n      into a container and take them to the inline-block level. Since we are\n      calling it in the same component, when we give the <b>position:\n      absolute</b> style, the child components in the <code><i>Card\n      Component</i></code> will stand on top of each other. This way they will\n      have the appearance of two different sides of the same card.`, // 💩\n    moreDescription: `By using CSS, we will display the card in\n      <code><i>CardFront</i></code> under the <code><i>CardBack\n      Component</i></code> with the <b>transform</b> property with each click on\n      the back of the Card. Let's add the following properties to our\n      <code><i>Global.css</i></code> file.`,\n    descriptionCode: `We tried to give a simple card look by adding certain\n      features to the containers with <code><i>back and front\n      classes</i></code>, which are <b>img</b> containers. Now, we have a chance\n      to examine how it looks on the interface by calling the <code><i>Card\n      component</code></i> in the <code><i>CardBack component</i></code>.`,\n    oneMoreDescription: `<code><i>Card components</i></code> need to provide\n      rotation at the same speed and from the same perspective as a whole. The\n      style properties defined in each component in <code><i>Svelte</i></code>\n      are as much as the container of the component, other components are not\n      affected by these styling. Therefore, let's make the same definitions for\n      both classes or define these stylings as <code><i>Global</i></code>.`,\n    codeExplanation: `When we give <b>.back</b>, <b>position: absolute</b> to\n      the container class of the <code><i>CardBack Component</i></code>, both\n      cards will be displayed one above the other.`,\n    otherCodeExplanation: `Provide <b>transform</b> styling in <code><i>Card\n      components</i></code> so that when <b>hover class</b> is added, it gives a\n      rotation effect.`,\n    endStory: `When you add the <b>hover</b> class to the element with the\n      <b>flipper</b> class of the <code><i>Card Back</i></code> component on the\n      console, you can see the effect.`,\n    image: `assets/components/Card/card-views.png`,\n    anotherImage: `assets/components/Card/card-position.gif`,\n    anotherOneImage: `assets/components/Card/card-turn-effect-back.png`,\n    moreImage: `assets/components/Card/card-turn-effect-front.png`,\n    alternativeText: `class Directives`,\n    anotherAlternativeText: `card position`,\n    anotherOneAlternativeText: `Card turn effect back`,\n    moreAlternativeText: `Card turn effect front`,\n    id: \"card-component\",\n  };\n\n  const code = `\n    <script><\\/script>\n\n    <img\n      src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\"\n      alt=\"card on the playing field\"\n      class=\"single-poke\"\n    />\n\n    <style>\n      .front {\n        width: 100px;\n        height: 100px;\n        top: 0;\n        left: 0;\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background-color: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c, -12px -12px 22px #fff;\n      }  \n    </style>\n  `;\n\n  const otherCode = `\n    <script><\\/script>\n\n    <div class=\"back\">\n      <img\n        src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/0.png\"\n        class=\"single-poke\"\n        alt=\"card back on the playing field\"\n      />\n    </div>\n\n    <style>\n      .back {\n        width: 100px;\n        height: 100px;\n        top: 0;\n        left: 0;\n        border-radius: 11px;\n      }\n\n      .back:hover {\n        cursor: pointer;\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c, -12px -12px 22px #fff;\n      }\n    </style>\n  `;\n\n  const oneMoreCode = `\n    .flipper.hover .front {\n      transform: rotateY(0deg);\n    }\n\n    .flipper.hover .back {\n      transform: rotateY(180deg);\n    }\n  `;\n\n  const anotherOneMoreCode = `\n    <script>\n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div class=\"flipper\">\n        <FrontCardFace />\n        <BackCardFace />\n      </div>\n    </main>\n\n    <style>\n      .flip-container {\n        display: inline-block;\n        margin: 5px;\n        width: 100px;\n        height: 100px;\n      }\n  \n      .flipper {\n        position: relative;\n      }  \n    </style>\n  `;\n\n  const moreCode = `\n    <script>\n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div class=\"flipper\"></div>\n    </main>\n\n    <style>\n      .back {\n        width: 100px;\n        height: 100px;\n        backface-visibility: hidden;\n        transition: 0.6s;\n        transform-style: preserve-3d;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        transform: rotateY(0deg);\n        border-radius: 11px;\n      }\n\n      .back:hover {\n        cursor: pointer;\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c, -12px -12px 22px #fff;\n      }  \n    </style>\n  `;\n\n  const anotherAnOneMoreCode = `\n    <script><\\/script>\n\n    <div class=\"front\">\n      <img\n        src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\"\n        alt=\"card on the playing field\"\n        class=\"single-poke\"\n      />\n    </div>\n\n    <style>\n      .front {\n        width: 100px;\n        height: 100px;\n        backface-visibility: hidden;\n        transition: 0.6s;\n        transform-style: preserve-3d;\n        position: absolute;\n        top: 0;\n        left: 0;\n        transform: rotateY(-180deg);\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background-color: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c, -12px -12px 22px #fff;\n      }  \n    </style>\n  `;\n\n  const title = `componenets > Playground > Cards > CardFront.svelte`;\n  const otherTitle = `componenets > Playground > Cards > CardBack.svelte`;\n  const oneMoreTitle = `public > global.css`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.anotherDescription} />\n  <Paragraph text={article.anAnotherDescription} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Paragraph text={article.descriptionCode} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.moreAnotherDescription} />\n  <CodeSyntax code={anotherOneMoreCode} title={otherTitle} />\n  <Paragraph text={article.codeExplanation} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.alternativeText}\n  />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={oneMoreCode} title={oneMoreTitle} />\n  <Paragraph text={article.otherCodeExplanation} />\n  <CodeSyntax code={moreCode} title={otherTitle} />\n  <Paragraph text={article.oneMoreDescription} />\n  <CodeSyntax code={anotherAnOneMoreCode} {title} />\n  <Paragraph text={article.endStory} />\n  <Image\n    image={article.anotherOneImage}\n    alternativeText={article.anotherAlternativeText}\n  />\n  <Image\n    image={article.moreImage}\n    alternativeText={article.moreAlternativeText}\n  />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Communication Between Components`,\n    description: `From small projects to complex structures, we will have needs\n      such as taking many data from the component and using it in a different\n      place, updating it. One of the structures used as a solution of modern\n      framework structures is to enable you to use the data here on your\n      application without the need for structures such as DOM and storage. The\n      framework, library or compiler should be able to provide flexible\n      solutions to this need. Svelte has multiple solutions for these needs.`,\n    image: `assets/documentation/communication-is-key.jpg`,\n    alternativeText: `SpongeBob 'communication is key' meme`,\n    id: \"communication-between-components\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  export let head;\n</script>\n\n<h3>🎈🎈 {head}</h3>\n","<script>\n  import ChildTitle from \"./Section/Templates/ChildTitle.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Context`,\n    description: `As the number of components you need to transfer data,\n      increases, it can be difficult to edit and follow the structure, and it\n      can turn into a rather boring situation after a while. With Context, it\n      enables data to be accessed on child components via parent.`,\n    id: \"context\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <ChildTitle head={article.head} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Creating Svelte project`,\n    description: `Creating a new project with npx:`,\n    otherDescription: `Svelte supports Typescript. You can use all the\n      operations you can do on <code><i>Typescript in Svelte</i></code>\n      projects.`,\n    anotherDescription: `We can start our project by adding the necessary\n      dependencies to our project.`,\n    anotherAnDescription: `After these commands, you can see which port the\n      project is running on the console. While the default 8080 port is marked\n      in Windows operating systems, the port number may vary if there is a\n      project running on this port or if you are using a different operating\n      system.`, // 💩\n    image: `assets/documentation/console-logs.png`,\n    alternativeText: `port where Svelte is running on the console`,\n    id: \"create-a-svelte-project\",\n  };\n\n  const svelteInstall = `npx degit sveltejs/template remember-em-all`;\n  const typescriptSet = `\n    cd remember-em-all\n    node scripts/setupTypeScript.js`;\n  const dependenciesInstall = `\n    npm install\n    npm run dev`;\n\n  const title = ``;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax code={svelteInstall} {title} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax code={typescriptSet} {title} />\n  <Paragraph text={article.anotherDescription} />\n  <CodeSyntax code={dependenciesInstall} {title} />\n  <Paragraph text={article.anotherAnDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n</article>\n","<script>\n  export let matter;\n</script>\n\n<ul>\n  {#each matter as item}\n    <li>🎈 {@html item}</li>\n  {/each}\n</ul>\n\n<style>\n  li {\n    list-style: none;\n    margin-bottom: 10px;\n  }\n</style>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import Matter from \"./Section/Templates/Matter.svelte\";\n\n  const article = {\n    head: `Examining the Svelte structure`,\n    description: `When we check the default 'src/App.svelte' file, as we\n      mentioned before, there are script tags where you can define Javascript\n      codes, main for html codes and style tags that allow you to develop on\n      styling.`,\n    material: [\n      `In the script tag, the 'lang' attribute is available in the 'ts' value\n      because of the <code><i>Typescript</i></code> dependency. In the\n      <code><i>Svelte</i></code> files that you want to use\n      <code><i>Typescript</i></code>, it will be sufficient to give the ts value\n      to the lang property.`,\n      `As you can define html codes in the 'main' tag, you can define HTML codes\n      outside of this tag as you wish. Although <code><i>Svelte</i></code>\n      compiles the codes you define as HTML code, it may be better to gather\n      them under a container tag, so that the project structure and code may be\n      more legible.`,\n      `The style properties you define under the style tag are affected by the\n      selectors in the HTML field in the same file. You can define global\n      selectors or edit the selectors you want to define globally in \n      'public/global.css' file.`,\n      `All builds compiled in the project are in the '/public/build/bundle.js'\n      file. The 'index.html' file presents the <code><i>Svelte</i></code>\n      project to the user by referencing the structure here.`,\n    ],\n    id: \"examine-svelte-structure\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Matter matter={article.material} />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Game Interface`,\n    description: `We need a component to use the cards in the game. By creating\n      this component, we will create as many cards as we want on the play\n      ground.`,\n    id: \"game-interface\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Game Requirements`,\n    description: `In addition to the user's values such as name and avatar,\n      there can be standard values for the game. For the game we are developing,\n      we will define two values named <code><i>level and score</i></code> from\n      these values. When the user clicks the <b>Start button</b> after selecting\n      the name and avatar, <b>level</b> will contain the value 1 and\n      <b>score</b> 0. We will update the <b>score</b> value as the user matches\n      the correct cards and the <b>level</b> value when all cards are matched.`,\n    anotherDescription: `We have created a value called <b>level</b> and we will\n      use it in our app for the good of the planet. This value will be updated\n      when the user can match all the cards on the interface. You can create and\n      update <code><i>Store</i></code> values with the <code><i>writable\n      interface</i></code> to create a <code><i>Store</i></code> value.`,\n    moreDescription: `Let's define the <code><i>score</i></code> value that the\n      user can earn points after each match.`, //💩\n    anotherMoreDescription: `As you can define these values in different files,\n      you can also define the score&level values in a single file. You can use\n      <code><i>name & avatar & score & level</i></code> values together by\n      creating a user.`, //💩\n    anotherOneMoreDescription: `Create a new class where we will keep the static\n      information of the user.`, //💩\n    otherDescription: `You can update <b>Store</b> values with more than one\n      structure on <code><i>Svelte</i></code>. Although you follow a path such\n      as <code><i>$level = 1</i></code>, you can perform the update process with\n      the <code><i>set method</code></i>, similar to the illustration in the\n      example below.`,\n    endStory: `We will set the user's name and avatar values to the\n      <code><i>UserInfo class</i></code> we have created. I have assigned\n      <b>empty String</b> to these values by default, you can fill them with\n      different content. If the name and avatar values are not incorrect, we\n      will start the game by updating the <code><i>isStart</i></code> value to\n      <b>true</b>.`,\n    id: \"game-requirements\",\n  };\n\n  const code = `\n    <script>\n      import { Writable, writable } from \"svelte/store\";\n      \n      export const level:Writable<number> = writable(1);\n    <\\/script>\n  `;\n\n  const otherCode = `\n    <script>\n      import { Writable, writable } from \"svelte/store\";\n  \n      export class UserInfo {\n        constructor (\n          public name: Writable<string> = writable(''),\n          public avatar: Writable<string> = writable(''),\n          public isStart: Writable<boolean> = writable(false)\n      ){}\n  \n      export const userInfo = new UserInfo();\n    <\\/script>\n  `;\n\n  const moreCode = `\n    <script>\n      import { Writable, writable } from \"svelte/store\";\n\n      export const score:Writable<number> = writable(0);\n    <\\/script>\n  `;\n\n  const anotherCode = `\n    <script context=\"module\">\n      import { score } from \"../../store/Score\";\n\n      export const scoreUp = () => {\n        let getScore;\n\n        score.subscribe((callScore) => {\n          getScore = callScore;\n        });\n\n        let up = getScore + 1;\n\n        score.set(up);\n      };\n    <\\/script>\n  `;\n\n  const title = `Store > Level.ts`;\n  const otherTitle = `Store > Score.ts`;\n  const moreTitle = `Store > User.ts`;\n  const anotherTitle = `Store güncelleme`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.anotherDescription} />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={moreCode} title={otherTitle} />\n  <Paragraph text={article.anotherMoreDescription} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax code={anotherCode} title={anotherTitle} />\n  <Paragraph text={article.anotherOneMoreDescription} />\n  <CodeSyntax code={otherCode} title={moreTitle} />\n  <Paragraph text={article.endStory} />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Header Component`,\n    description: `Let's create a component named <code><i>Header.svelte</code>\n      </i> on the <b>root</b> folder. Let's call the\n      <code><i>Header.svelte Component</i></code> on the\n      <code><i>Userground.svelte</i></code> component, as we did in the previous\n      examples. The <code><i>Header.svelte component</code></i> we created has a\n      simple task, it is to contain a static text.`,\n    otherDescription: `It looks super gross, doesn't it? Thanks to God, we have\n      CSS.`,\n    anotherDescription: `mehhh... you can say it looks a little less gross\n      now💩`,\n    image: `assets/components/User/header-component.png`,\n    alternativeText: `call header component`,\n    id: \"header-component\",\n  };\n\n  const code = `\n    <script><\\/script>\n\n    <div class=\"header\">\n      <h2>select your best pokemon and start catching!</h2>\n    </div>\n\n    <style>\n      .header {\n        padding: 5px 0;\n        margin-bottom: 15px;\n        border-bottom: 3px solid white;\n      }\n    </style>\n  `;\n\n  const otherCode = `\n    <script>\n      import Header from \"./Header.svelte\";\n    <\\/script>\n\n    <main>\n      <Header />\n    </main>\n\n    <style>\n      main {\n        background-color: #f5f5f5;\n        border-radius: 5px;\n        padding-bottom: 15px;\n      }\n    </style>\n  `;\n\n  const moreCode = `\n    <script>\n      import Userground from \"../../User/Userground.svelte\";  \n    <\\/script>\n\n    <main class=\"playground\">\n      <Userground />\n    </main>\n\n    <style>\n      .playground {\n        width: 900px;\n        margin: 0 auto;\n        text-align: center;\n      }\n    </style>\n  `; // 💩\n\n  const title = `User > Header.svelte`;\n  const otherTitle = `User > UserGround.svelte`;\n  const moreTitle = `Playground > Wrapper > Playground.svelte`; // 💩\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax {code} {title} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <Paragraph text={article.anotherDescription} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Hiiiiiiiiii 👋`,\n    description: `First of all, I hope this simple document can be a guide on\n      your <code><i>Svelte</i></code> journey. I recently started developing\n      applications with Svelte. I have prepared this article in order to have a\n      better understanding of the Svelte structure and to share what I have\n      learned. In the document, I explained step by step how I developed the\n      game, which you can see in the <code><i>#Game</i></code> link, if you are\n      interested, you may createa similar application by following the same\n      steps or use it as a small resource. Svelte has well-detailed\n      documentation (<a href=\"https://svelte.dev/docs\" title=\"Svelte\n      Documentation\">Svelte Documentation</a>, <a \n      href=\"https://svelte.dev/examples/hello-world\" title=\"Svelte Examples\">\n      Svelte Examples</a>), so it may be more helpful to follow the application\n      after reviewing the documentation.`,\n    otherDescription: `In the first few chapters, there is information about\n      how to use <code><i>Svelte</i></code>. If you have mastered these parts,\n      you can skip ahead and continue from the  <a href=\"#start-game\" title=\"\n      Access Startm Game section\">Start Game</a> section.`,\n    image: `assets/documentation/squirtle-squad.webp`,\n    alternativeText: `hello team`,\n    id: \"hello-team\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.otherDescription} />\n</article>\n","<script>\n  import ChildTitle from \"./Section/Templates/ChildTitle.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Module Context`,\n    description: `If the data you use on the Component is located in a different\n      Component and its operations are dependent on each other, 'Module Context'\n      provides this scenario to be applied between Components. It allows sharing\n      data with multiple components.`,\n    id: \"module-context\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <ChildTitle head={article.head} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Name Component`,\n    description: `We are going to create the necessary component for our Pokemon\n      trainer to enter a name.`,\n    anotherDescription: `Let's use the <code><i>UserName component</i></code>\n      in the <code><i>Userground component</i></code>, as we did in the other\n      components.`,\n    moreDescription: `We have one last component left, create a button component\n      with the text <b>Start</b>, save it as <code><i>Start.svelte</i></code> in\n      the <b>User</b> folder and finally call it in the <code><i>UserGround\n      component</i></code>.`, //💩\n    oneMoreDescription: `Abracadabra... The components we have made so far have\n      not performed dynamic operations. We have enough material to create the\n      interface and you can style them how you want. Each styling of your\n      <code><i>Svelte</i></code> file is equal to the scope of the\n      <code><i>Svelte</i></code> file. Child-Parent components do not have these\n      style properties. In the next stages, we will add dynamic properties to\n      these components.`, //💩\n    image: `assets/components/User/end-interface.png`,\n    alternativeText: `call Avatar Component`,\n    id: \"name-component\",\n  };\n\n  const code = `\n    <script><\\/script>\n\n    <div class=\"user\">\n      <input type=\"text\" class=\"name\" name=\"name\" placeholder=\"pika pika\" />\n    </div>\n\n    <style>\n      .name {\n        width: 40%;\n        border-radius: 20px;\n        text-align: center;\n        margin-bottom: 30px;\n        padding: 8px 0;\n      }\n    </style>\n  `;\n\n  const title = `User > Avatar > Name > UserName.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.anotherDescription} />\n  <Paragraph text={article.moreDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.oneMoreDescription} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `A little practice`,\n    description: `Let's try to understand and interpret\n      <code><i>Svelte</i></code> by making a few examples. The code samples will\n      form the basis for the structures that we will use frequently on the\n      game.`,\n    otherDescription: `A variable named <code><i>name</i></code> is defined in\n      the <code><i>app.svelte</i></code> file. Since it is based on \n      <code><i>Typescript</i></code> notation, string is given as value type.\n      With this notation, I would prefer not to use it because the expression\n      may be a little longer. If you're reviewing the code available on Github,\n      what we're going to create here may be different.`,\n    id: \"practice\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n</article>\n","<script>\n  export let material;\n</script>\n\n<ul>\n  {#each material as matter}\n    <li class=\"first-list-element\">{matter.command}:</li>\n    <ul>\n      <li>{@html matter.description}</li>\n    </ul>\n  {/each}\n</ul>\n\n<style>\n  li {\n    list-style: none;\n  }\n\n  .first-list-element {\n    font-weight: bold;\n  }\n\n  li:last-child {\n    text-indent: 20px;\n    margin-bottom: 20px;\n  }\n</style>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import List from \"./Section/Templates/List.svelte\";\n\n  const article = {\n    head: `Project dependencies`,\n    terms: [\n      {\n        command: `Typescript`,\n        description: `<code><i>Typescript</i></code> is a <code><i>Javascript\n          </i></code> based programming language that makes your <code><i>\n          Javascript</i></code> code more efficient and prevents code-based\n          errors. It supports <code><i>.ts</i></code> files as well as you can\n          use it in <code><i>.svelte</i></code> files in your project. We will\n          not continue with Typescript format in the game we will develop. I\n          realized that I did not have complete control over it and that I had\n          deviated from the essence of the subject. Just remember that you can\n          use <code><i>Typescript on Svelte</code></i>.`,\n      },\n      {\n        command: `Rollup`,\n        description: `With your <code><i>Svelte</i></code> installation, the\n          rollup.config.js file will be created on the root folder.\n          <code><i>Rollup</i></code> is a module wrapper for <code><i>\n          Javascript</i></code> applications, it parses the codes in our\n          application in a way that the browser can understand. It will be\n          included in your project with the installation of\n          <code><i>Svelte</i></code>.`,\n      },\n    ],\n    id: \"dependencies\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <List material={article.terms} />\n</article>\n","<script>\n  import ChildTitle from \"./Section/Templates/ChildTitle.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Props`,\n    description: `By using props, we can transfer data from a component to\n      different components. This relationship between components is expressed as\n      parent-child. While you can pass data to child components through the\n      parent, you can also pass data to the parent component through the child\n      component.`,\n    id: \"props\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <ChildTitle head={article.head} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `User Component`,\n    description: `We had an unfinished <code><i>User component</i></code>. We\n      are going to use the <code><i>Store</i></code> values we defined in the\n      <code><i>User component</i></code> values. Let's give the user access to\n      the game interface with the finishing touches we will do here. On the\n      <code><i>ImageAvatar.svelte component</i></code>, when the user clicks the\n      avatar, let's update the avatar value we created in the <code><i>userInfo\n      class</i></code>.`,\n    otherDescription: `On the <code><i>ImageAvatar.svelte component</i></code>,\n      when the user clicks the avatar, let's update the avatar value we created\n      in the <code><i>userInfo class</i></code>.`,\n    anotherDescription: `With this update, the <b>opacity</b> value of the\n      avatars selected by the user and hovered over with the mouse will be\n      changed and the avatar image will be highlighted.`,\n    anAnotherDescription: `We can update the <b>$name</b> store value in the\n      <code><i>UserInfo class</i></code> we imported with the <b>bind:value\n      method</b>.`, // 💩\n    moreAnotherDescription: `Now let's get to the best part. Let's put the\n      finishing touches and start the game. Let's define an <b>if/else\n      structure</b> on the <code><i>components > Playground > Wrapper >\n      Playground.svelte</i></code> component. If our <b>isStart store value is\n      false</b>, it will direct the user to the component where they can\n      choose <b>name&avatar</b>. Otherwise, let's show a simple error text.`, // 💩\n    moreDescription: `You can use if/else logics like loops. When you need else\n      if, it will suffice to define else if, <code><i>isStart ===\n      undefined</i></code> as a condition statement..`,\n    descriptionCode: `With the StartGame function, name and avatar store values\n      will be checked. If these values are not empty, the <b>isStart</b> store\n      value will be set to <b>true</b> and an information will be written to the\n      console where the game will be started. If any of these values are not\n      found, the <code><i>User component</i></code> will remain where it is. For\n      such a possibility, let's inform the user using <code><i>class\n      directives</i></code>.`,\n    codeExplanation: `With the function we connect to the <code><i>on:click\n      method</i></code>, we can easily obtain information on the avatar that\n      the user clicks. By opening the console, you can examine the logs. We can\n      access the avatar information that we send as a parameter to the\n      <code><i>ImageAvatar component</i></code>, here we make the function a\n      little simpler by using it.`,\n    otherCodeExplanation: `Every time the user clicks on the avatars, we update\n      the <code><i>$avatar</i></code> value. Before moving on to the\n      <code><i>ImageAvatar.svelte component</i></code>, let's make the\n      <b>.picked and .unpicked</b> classes that we defined many years ago\n      meaningful by using <code><i>class directives</i></code>.`,\n    oneLineDescription: `Another value we need to get from the user is\n      <b>username</b>.`,\n    endStory: `In order to get help from the <code><i>Class\n      Directive</i></code>, we created two different values named\n      <b>isAvatarEmpty and isNameEmpty</b>. By creating another <b>div</b> tag\n      below the <b>Button</b>, we show the error message here. Edit the error\n      message for <b>name</b>.. And you can recreate the <b>div</b> tag we\n      created as a component and use it for both <b>name and avatar</b>. Make it\n      happen, then let's continue in the next section.`,\n    image: `assets/components/User/class-directive.gif`,\n    anotherImage: `assets/components/User/start-game.gif`,\n    alternativeText: `Class Directives`,\n    anotherAlternativeText: `Class Directives`,\n    id: \"reactive-user-component\",\n  };\n\n  const code = `\n    <script>\n      import { userInfo } from \"../../../Store/User\";\n\n      const { avatar } = userInfo;\n\n      export let userAvatar;\n\n      const setAvatar = () => {\n        console.log(\"focus on avatar => \", userAvatar);\n\n        $avatar = userAvatar;\n\n        console.log($avatar);\n      };\n    <\\/script>\n\n    <img\n      src={userAvatar}\n      class=\"avatar unpicked\"\n      alt=\"avatar\"\n      on:click={setAvatar}\n    />\n  `;\n\n  const otherCode = `\n    <script>\n      import { userInfo } from \"../../../Store/User\";\n  \n      const { avatar } = userInfo;\n  \n      export let userAvatar;\n  \n      const avatarName = userAvatar.match(/\\w*(?=.\\w+$)/)[0];\n    <\\/script>\n\n    <img\n      src={userAvatar}\n      class=\"avatar unpicked\"\n      alt=\"avatar\"\n      on:click={() => ($avatar = avatarName)}\n    />\n  `;\n\n  const oneMoreCode = `\n    <img\n      src={userAvatar}\n      class=\"avatar unpicked\"\n      alt=\"avatar\"\n      class:picked={avatarName === $avatar}\n      on:click={() => ($avatar = avatarName)}\n      />\n  `;\n\n  const anotherOneMoreCode = `\n    <script>\n      import { userInfo } from \"../../../Store/User\";\n\n      const { name } = userInfo;\n    <\\/script>\n\n    <div class=\"user\">\n      <input\n        type=\"text\"\n        class=\"name\"\n        name=\"name\"\n        placeholder=\"pika pika\"\n        bind:value={$name}\n      />\n    </div>\n  `;\n\n  const moreCode = `\n    <script>\n      import UserGround from \"../../User/UserGround.svelte\";\n      import { userInfo } from \"../../../Store/User\";\n  \n      const { isStart } = userInfo;\n    <\\/script>\n\n    <main class=\"playground\">\n      {#if $isStart}\n        <h3>Start Game....</h3>\n      {#else}\n        <UserGround />\n      {/if}\n    </main>\n  `;\n\n  const anotherAnOneMoreCode = `\n    <script>\n      import { userInfo } from \"../../Store/User\";\n      \n      const { name, avatar, isStart } = userInfo;\n\n      const startGame = () => {\n        if ($avatar === \"\") {\n          return;\n        }\n\n        if ($name === \"\") {\n          return;\n        }\n\n        $isStart = true;\n\n        console.log(\"::::: start game :::::\");\n        console.log(\":: enjoy {$name} ::\");\n      };\n    <\\/script>\n\n    <div class=\"start\">\n      <button on:click={startGame}>Start</button>\n    </div>\n  `;\n\n  const endCode = `\n    <script>\n      import { userInfo } from \"../../Store/User\";\n      \n      const { name, avatar, isStart } = userInfo;\n\n      let isAvatarEmpty = false;\n      let isNameEmpty = false;\n\n      const startGame = () => {\n        if ($avatar === \"\") {\n          isAvatarEmpty = true;\n          return;\n        }\n\n        if ($name === \"\") {\n          return;\n        }\n\n        $isStart = true;\n\n        console.log(\"::::: start game :::::\");\n        console.log(\":: enjoy {$name} ::\");\n      };\n    <\\/script>\n\n    <div class=\"start\">\n      <button on:click={startGame}>Start</button>\n      <div class=\"avatarError visible\">\n        <span class=\"unvisible\" class:visible={$avatar === \"\" && isAvatarEmpty}>\n          please, select a avatar..\n        </span>\n      </div>\n    </div>\n    \n    <style>\n      .name {\n        width: 40%;\n        border-radius: 20px;\n        text-align: center;\n        margin-bottom: 30px;\n        padding: 8px 0;\n      }\n\n      .avatarError {\n        color: red;\n        font-size: 18px;\n      }\n\n      .unvisible {\n        display: none;\n      }\n\n      .visible {\n        display: block;\n      }\n\n      .start button:active {\n        border: 2px solid white;\n      }\n    </style>\n  `;\n\n  const title = `componenets > User > Avatars > ImageAvatar.svelte`;\n  const moreTitle = `componenets > Playground > Wrapper > Playground.svelte`;\n  const otherTitle = `components > User > name > UserName.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.codeExplanation} />\n  <CodeSyntax code={otherCode} {title} />\n  <Paragraph text={article.otherCodeExplanation} />\n  <CodeSyntax code={oneMoreCode} {title} />\n  <Paragraph text={article.anotherDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.oneLineDescription} />\n  <CodeSyntax code={anotherOneMoreCode} title={otherTitle} />\n  <Paragraph text={article.anAnotherDescription} />\n  <Paragraph text={article.moreAnotherDescription} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={anotherAnOneMoreCode} title={moreTitle} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.alternativeText}\n  />\n  <Paragraph text={article.descriptionCode} />\n  <CodeSyntax code={endCode} title={moreTitle} />\n  <Paragraph text={article.endStory} />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Reactive variables`,\n    description: `When dynamic data, which is changeable, is updated, its\n      reference on the DOM is also updated.`,\n    otherDescription: `Each time the <b>numb</b> value we define is updated,\n      this value will continue to be updated on the DOM without getting bored.`,\n    image: `assets/documentation/reactive.gif`,\n    alternativeText: `definition of reactive variable in Svelte`,\n    id: \"reactive-variables\",\n  };\n\n  const code = `\n    <script>\n      let number = 0;\n  \n      const randomNumber = () => {\n        number = Math.round(Math.random() \\* 15);\n      };\n    <\\/script>\n\n    <main>\n      <h3>{number}</h3>\n      <button on:click={randomNumber}>Update Number</button>\n    </main>\n\n    <style>\n      main {\n        border-radius: 5px;\n        background-color: yellowgreen;\n        padding: 5px;\n        margin: 10px 50px;\n      }\n      \n      h3 {\n        background-color: orangered;\n        width: 100px;\n        color: white;\n      }\n      \n      button {\n        border: 1px solid black;\n        cursor: pointer;\n      }\n      \n      h3,button {\n        display: block;\n        text-align: center;\n        margin: 25px auto;\n        padding: 5px;\n      }\n    </style>\n  `;\n\n  const title = `app.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.otherDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n</article>\n","<script>\n  import ChildTitle from \"./Section/Templates/ChildTitle.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Slots`,\n    description: `You can use it to pass the data to the child component, as in\n      the parent-child relationship. You can pass data (such as html content)\n      within a template.`,\n    id: \"slots\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <ChildTitle head={article.head} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Start Game`,\n    description: `We're getting to know <code><i>Svelte</i></code> a little\n      better, we've learned enough to create our app together. We can start to\n      construct the structures required for the game from simple to difficult.\n      There are two Components that the user can see on the interface,\n      <b>Username and User Component</b> with <b>avatar selected, Playground\n      Component</b> accessed after these selections. Let's start building our\n      game with the <b>User Component</b>. You can create a new project or\n      remove the code we have been practicing. Let's start by creating the\n      <code><i>src > components > User and src > components > Playground</i>\n      </code> folders.`,\n    image: `assets/documentation/start-folder.png`,\n    alternativeText: `start folder`,\n    id: \"start-game\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n</article>\n","<script>\n  import ChildTitle from \"./Section/Templates/ChildTitle.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `Store`,\n    description: `Data transportation company's joker card.. It enables us to\n      call and update data anywhere. It does not need to be in a hierarchy for\n      its use.`,\n    id: \"store\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <ChildTitle head={article.head} />\n  <Paragraph text={article.description} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `How Svelte Works?`,\n    description: `<code><i>Svelte</i></code> components are created with files\n      with the <code><i>.svelte</i></code> extension. Similar to HTML, there are\n      three different sections where you can create <code><i>script, style and\n      html</i></code> code structures.`,\n    otherDescription: `<code><i>Svelte</i></code> files are compiled and\n      converted to vanilla <code><i>Javascript</i></code> codes. Svelte compiles\n      on runtime. With this build process, it eliminates addiction of the\n      Virtual DOM.`,\n    image: `assets/documentation/build-map.png`,\n    alternativeText: `Svelte build file`,\n    id: \"how-svelte-works\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Usage of component`,\n    description: `It provides convenience when working on breaking down the\n      components in our applications and bringing them into a whole as we want,\n      and it takes less effort to be able to recall the repetitive component\n      parts.`,\n    otherDescription: `Let's turn the simple structure that produces random\n      numbers that we made in the previous example into a component. Let's\n      create the <code><i>RandomNumber.svelte</i></code> file in the \n      <code><i>components/Content/</i></code> directory. We can use this new\n      component in the <code><i>App.svelte</i></code> file.`,\n    anotherDescription: `We can start using the <b>RandomNumber component</b> by\n      calling it as we want. With this, components of <b>button & h3 elements\n      </b> used in the component should also be created. You can see these uses\n      in the components we will use for the game.`,\n    image: `assets/components/component-with-sabuha.png`,\n    anotherImage: `assets/components/random-number-component.gif`,\n    alternativeText: `simple component usage demonstration`,\n    anotherAlternativeText: `Random Number Component`,\n    id: \"use-of-components\",\n  };\n\n  const code = `\n    <script>\n      let number = 0;\n  \n      const randomNumber = () => {\n        number = Math.round(Math.random() \\* 15);\n      };\n    <\\/script>\n\n    <div class=\"random-number-capsule\">\n      <h3>{number}</h3>\n      <button on:click={randomNumber}>Update Number</button>\n    </div>\n\n    <style>\n      .random-number-capsule {\n        border-radius: 5px;\n        background-color: yellowgreen;\n        padding: 5px;\n        margin: 10px 50px;\n      }\n      \n      h3 {\n        background-color: orangered;\n        width: 100px;\n        color: white;\n      } \n      \n      button {\n        border: 1px solid black;\n        cursor: pointer;\n      } \n      \n      h3,\n      button {\n        display: block;\n        text-align: center;\n        margin: 25px auto;\n        padding: 5px;\n      }\n    </style>\n  `;\n\n  const otherCode = `\n    <script>\n      import RandomNumber from \"./components/Content/RandomNumber/RandomNumber.svelte\";\n    <\\/script>\n\n    <main>\n      <RandomNumber />\n      <RandomNumber />\n      <RandomNumber />\n      <RandomNumber />\n    </main>\n  `;\n\n  const title = `Components > Content > RandomNumber.svelte`;\n  const otherTitle = `App.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.anotherDescription} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.anotherAlternativeText}\n  />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n  import Matter from \"./Section/Templates/Matter.svelte\";\n\n  const article = {\n    head: `User Component`,\n    description: `Let's create the <b>Avatar and Name</b> folders for each value\n      we will receive from the User under the <code><i>User</i></code> folder.\n      We will include a container in the root folder that will contain all the\n      structures defined under <code><i>User Component</i></code>. I'm creating\n      a file called <code><i>UserGround.svelte</i></code>, all the components we\n      split will be located here.`,\n    otherDescription: `By creating a similar structure in the\n      <code><i>Playground</i></code> folder, we will call all the components in\n      the game on the same file. Let's create the <code><i>Wrapper >\n      Playground.svelte</code></i> directory and file under Playground.`,\n    anotherDescription: `While working on the <b>User Component</b>, let's call\n      the <b>User Component</b> in the <code><i>Playground > Wrapper >\n      Playground.svelte</i></code> file so that we can review the changes we\n      will make.`,\n    anAnotherDescription: `After calling the <code><i>User Component</i></code>,\n      let's start developing on it.`, // 💩\n    moreAnotherDescription: `There are 4 different sections on the component.`, // 💩\n    codeExplanation: `We have defined a simple header tag in our component. We\n      call <code><i>componentDetail</i></code> value in\n      <code><i>Header</i></code>.`,\n    moreCodeExplanation: `Let's use it by importing it to the\n      <code><i>Playground component</i></code> so that we can examine the\n      improvements we will make in our component in the browser.`,\n    material: [\n      `A header that informs the user`,\n      `A section where the user can choose avatars over images`,\n      `Space to the enter username`,\n      `And when all this is completed, there is a button element that starts the\n      game.`,\n    ],\n    image: `assets/components/User/call-user-component.png`,\n    anotherImage: `assets/components/User/components-section.png`,\n    alternativeText: `Call User Component`,\n    anotherAlternativeText: `displaying components on the dom`,\n    id: \"user-component\",\n  };\n\n  const code = `\n    <script>\n      const componentDetail = \"User\";\n    <\\/script>\n\n    <main>\n      <h2>{componentDetail} Component</h2>\n    </main>\n\n    <style>\n      h2 {\n        color: white;\n        background-color: orangered;\n        text-align: center;\n      }  \n    </style>\n  `;\n\n  const otherCode = `\n    <script>\n      import Userground from \"../../User/Userground.svelte\";\n    <\\/script>\n\n    <main>\n      <UserGround />\n    </main>\n\n    <style>\n      h2 {\n        color: white;\n        background-color: orangered;\n        text-align: center;\n      }\n    </style>\n  `;\n\n  const title = `User > UserGround.svelte`;\n  const otherTitle = `Playground > Wrapper > Playground.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <Paragraph text={article.anotherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.codeExplanation} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Paragraph text={article.moreCodeExplanation} />\n  <Paragraph text={article.anAnotherDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.moreAnotherDescription} />\n  <Matter matter={article.material} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.alternativeText}\n  />\n</article>\n","<script>\n  import SubHeader from \"./Section/Templates/SubHeader.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Variable access`,\n    description: `<code><i>Curly braces {}</i></code> must be used to call the\n      values defined on the script in HTML. With this template, you can perform\n      operations by calling variables regardless of value type.`,\n    otherDescription: `With this definition, you can dynamically call any value\n      defined to the <b>user</b> value in HTML. Where <b>user</b> is equal to \n      <b>sabuha</b>, <b>he is watching you!</b> instead of <b>I saw a cat, as if!\n      </b> Let's display the value.`,\n    anotherDescription: `You can perform loop and function calls as well as\n      condition structures between <code><i>curly braces {}</code></i> tags that\n      we use in <b>HTML</b>. We will perform together, many operations with\n      these structures.`,\n    id: \"variable-access\",\n  };\n\n  const code = `\n    <script>\n      const user = \"sabuha\";\n    <\\/script>\n\n    <span>{user} seni izliyor!</span>\n    \n    <style>\n      span {\n        color: rebeccapurple;\n      }  \n    </style>`;\n\n  const otherCode = `\n    <script>\n      const user = \"sabuha\";  \n    <\\/script>\n\n    <span>{user === \"sabuha\" ? \"bir kedi gördüm sanki!\" : \"seni izliyor!\"}</span>\n\n    <style></style>\n  `;\n\n  const title = \"app.svelte\";\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <SubHeader head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax code={otherCode} {title} />\n  <Paragraph text={article.anotherDescription} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n\n  const article = {\n    head: `What is Svelte?`,\n    description: `<code><i>Svelte</i></code> is a compiler that aims to reduce\n      the complexity of today's modern library and framework habitat which is\n      enabling simpler, efficent applications to be developed. Along with modern\n      frameworks or libraries, a new learning process emerged for different\n      needs as time passed. It is quite obvious that the learning cycle\n      constantly confronts to the developers, after a while developers starts to\n      say for god's sake. Svelte has managed to break out of this loop with its\n      features such as having a syntax similar to the <code><i>html & css & js\n      </i></code> code structures we are used to, and not needing to spend\n      effort for props and state/stores updates.. and I hope it can continue to\n      maintain its simplicity in this way.`,\n    otherDescription: `In the\n      <a href=\"https://insights.stackoverflow.com/survey/2021#section-most-loved-dreaded-and-wanted-web-frameworks\"\n      title=\"Stack Overflow Developer Survey 2021\">Stack Overflow Developer\n      Survey 2021</a> , Svelte was chosen as the most popular web framework with\n      a rate of 71.47% by the developers.`,\n    id: \"what-is-svelte\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n  import List from \"./Section/Templates/List.svelte\";\n\n  const article = {\n    head: `Show Your Cards ♠️`,\n    description: `After these updates on the interface, we can show off cards\n      onto our playing field. In this section we will show the cards on the\n      playing field.`,\n    otherDescription: `We will define some functions in order to perform some\n      operations in the game interface. Let's create a new folder named\n      <b>GameAction</b> under our <b>SRC folder</b>. The functions that we will\n      define under this folder will perform the following operations:`,\n    anotherDescription: `Let's proceed step by step.. Let's create the range of\n      numbers that will take place on the Interface, depending on the level.`,\n    anAnotherDescription: `The number values 1, 5 and 4 that we give as\n      parameters allow us to create the array values displayed on the console.\n      If we have a number that covers certain intervals, there is no situation\n      that prevent us from randomly mixing the numbers in the array.`, // 💩\n    moreDescription: `We have created our necessary functions so that we can\n      list the cards on the game interface. Let's get the\n      <code><i>Playground</i></code> area excited by using them.`,\n    descriptionCode: `We created a store value called <b>mixedListOfPokemon</b>\n      in the <code><i>Playground component</i></code>. This value keeps the\n      random numbers together with our id values. Let's pass these values as\n      props to the component named Card in a loop. We will use the transferred\n      values in our components named CardFront and CardBack.`,\n    codeExplanation: `I exported the module because I needed the list function\n      in the <code><i>ListCards.svelte</i></code> file. The function has a\n      simple task. It should return a range of 5 numbers in array type with the\n      value given as a parameter. Our range value represents the total range\n      length we want to access. The <b>maxNumberReachedOnRange</b> value gives\n      the maximum number to be reached, while the <b>minNumberReachedOnRange</b>\n      value allows us to obtain the minimum number by using the maximum value.\n      Let's check how it works by calling it in our\n      <code><i>Playground component</i></code>.`,\n    otherCodeExplanation: `By using the function we will create in the\n      <code><i>MixCards component</i></code>, we will copy the values in the\n      array we obtained from the list function. When our number range is 5,\n      there will be 10 values in total in our new array value. These values will\n      be placed randomly in the array instead of following a specific order. In\n      order to match the cards in the future, let's assign an id value according\n      to the sequence number of each card.`,\n    endStory: `We have successfully sorted our cards on the interface. As we did\n      in the previous section, when we add <b>.hover</b> to the element with the\n      <b>.flipper</b> class value, we can inspect the <code><i>CardFront\n      component</i></code> of the card.`,\n    image: `assets/components/GameAction/function-of-list-cards.png`,\n    anotherImage: `assets/components/GameAction/shuffle-cards.png`,\n    moreImage: `assets/components/GameAction/card-components.png`,\n    alternativeText: `Display of ListCards module on console`,\n    anotherAlternativeText: `Display of MixCards module on console`,\n    moreAlternativeText: `Observing CardFront and CardBack components`,\n    terms: [\n      {\n        command: `LevelUpdate`,\n        description: `When all the cards are matched correctly on the interface,\n          the next level will be passed.`,\n      },\n      {\n        command: `ListCards`,\n        description: `The cards on the interface will be brought according to\n          the level. While cards in the range of 0-5 at the 1st level are\n          brought, cards with the numbers 5-10 at the 2nd level and 10-15 at the\n          3rd level will be reflected on the interface. We will construct the\n          range values with the function here.`,\n      },\n      {\n        command: `MixCards`,\n        description: `The cards on the interface should be distributed randomly,\n          not in a row. We will do this with the MixCards function.`,\n      },\n      {\n        command: `CloseOpenCards`,\n        description: `When 2 unmatched cards are opened or all cards are matched\n          correctly, the cards must be closed in the interface for the next\n          level to be reached. In both cases we will define valid functions. \n          Let's proceed step by step. Let's create the range of numbers that\n          will take place on the Interface, depending on the level.`,\n      },\n    ],\n    id: \"show-cards-in-your-hand\",\n  };\n\n  const code = `\n    <script context=\"module\">\n      export const list = (level) => {\n        const list = [];\n        const range = 5;\n        const maxNumberReachedOnRange = level * 5;\n        let minNumberReachedOnRange = maxNumberReachedOnRange - 4;\n\n        for(minNumberReachedOnRange; \n          minNumberReachedOnRange <= maxNumberReachedOnRange; \n          minNumberReachedOnRange++) {\n          list.push(levelCounter);\n        }\n\n        return list;\n      }\n    <\\/script>\n  `;\n\n  const otherCode = `\n    <script context=\"module\">\n      export const shuffle = (pokemonList) => {\n        let shakeList = [];\n        const duplicateList = pokemonList.concat(pokemonList);\n        const totalNumberRange = duplicateList.length - 1;\n\n        for(let counter = 0; counter <= totalNumberRange; counter++) {\n          let pokemonNo = counter;\n          const randomNumb = Math.trunc(Math.random() * duplicateList.length);\n\n          shakeList = [\n            { no: pokemonNo, id: duplicateList[randomNumber] },\n            ...shakeList\n          ];\n\n          duplicateList.splice(duplicateList.indexOf(duplicateList[randomNumb]), 1);\n        }\n\n        return shakeList;\n      }\n    <\\/script>\n  `;\n\n  const oneMoreCode = `\n      <script>\n        import UserGround from \"../../User/UserGround.svelte\";\n        import { userInfo } from \"../../../Store/User\";\n        import Card from \"./Cards/Card.svelte\";\n        import { list } from \"../../GameAction/ListCards.svelte\";\n        import { shuffle } from \"../../GameAction/MixCards.svelte\";\n        import { level } from \"../../../Store/Level\";\n\n        const { isStart } = userInfo;\n        $: pokemonList = list($level);\n        $: mixedListOfPokemon = shuffle(pokemonList);\n      <\\/script>\n\n      <main class=\"playground\">\n        {#if !$isStart}\n          {#each mixedListOfPokemon as pokemon}\n            <Card {pokemon} />\n          {/each}\n        {:else}\n          <UserGround />\n        {/if}\n      </main>\n\n      <style>\n        .playground {\n          width: 900px;\n          margin: 0 auto;\n          text-align: center;\n        }\n      </style>\n  `;\n\n  const anotherOneMoreCode = `\n    <script>\n      export let pokemon;\n\n      $: pokemonId = pokemon.id;\n    <\\/script>\n\n    <div class=\"front\">\n      <img\n        src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemonId}.png\"\n        alt=\"card on the playing field\"\n        class=\"single-poke\"\n      />\n    </div>\n    \n    <style>\n      .front {\n        width: 100px;\n        height: 100px;\n        backface-visibility: hidden;\n        transition: 0.6s;\n        transform-style: preserve-3d;\n        position: absolute;\n        top: 0;\n        left: 0;\n        transform: rotateY(-180deg);\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background-color: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c, -12px -12px 22px #fff;\n      }\n    </style>\n  `;\n\n  const moreCode = `\n    <script>\n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div class=\"flipper\"></div>\n    </main>\n\n    <style>\n      .back {\n        width: 100px;\n        height: 100px;\n        backface-visibility: hidden;\n        transition: 0.6s;\n        transform-style: preserve-3d;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        transform: rotateY(0deg);\n        border-radius: 11px;\n      }\n\n      .back:hover {\n        cursor: pointer;\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c, -12px -12px 22px #fff;\n      }  \n    </style>\n  `;\n\n  const anotherAnOneMoreCode = `\n    <script>\n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n\n      export let pokemon;  \n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div class=\"flipper\">\n        <BackCardFace {pokemon} />\n        <FrontCardFace {pokemon} />\n      </div>\n    </main>\n\n    <style>\n      .flip-container {\n        perspective: 1000px;\n        transform-style: preserve-3d;\n        display: inline-block;\n        margin: 5px;\n        width: 100px;\n        height: 100px;\n      }\n\n      .flipper {\n        position: relative;\n      }\n    </style>\n  `;\n\n  const title = `componenets > GameAction > ListCards.svelte`;\n  const otherTitle = `componenets > GameAction > MixCards.svelte`;\n  const oneMoreTitle = `components > Playground > Cards > Wrapper > \n    Playground.svelte`;\n  const moreTitle = `components > Playground > Wrapper > Cards > Card.svelte`;\n  const anotherTitle = `components > Playground > Wrapper > Cards > \n    CardBack.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <List material={article.terms} />\n  <Paragraph text={article.anotherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.codeExplanation} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.anAnotherDescription} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Paragraph text={article.otherCodeExplanation} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.alternativeText}\n  />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={oneMoreCode} title={oneMoreTitle} />\n  <Paragraph text={article.descriptionCode} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <CodeSyntax code={anotherAnOneMoreCode} title={anotherTitle} />\n  <CodeSyntax code={anotherOneMoreCode} title={anotherTitle} />\n  <Paragraph text={article.endStory} />\n  <Image\n    image={article.moreImage}\n    alternativeText={article.moreAlternativeText}\n  />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Cards Spin Effect`,\n    description: `After the click events on the cards, let's arrange the\n      rotation effects in this section. At before, we defined styles to perform\n      this action. Let's make this user interactive. `,\n    requireDescription: `Let's define a store value with the name\n      <code><i>cardFlipperCapsule</i></code> where we can keep the interacted\n      cards.`,\n    otherDescription: `After the click event, let's add the number value of the\n      clicked card to the <code><i>cardFlipperCapsule</i></code> value. Here we\n      give the <b>hover</b> class to the values in the\n      <code><i>cardFlipperCapsule</code></i> with <b>class directives</b>.`,\n    codeExplanation: `We will get a reaction for every click on the back of the\n      card. We are going to connect the function which we had just created in\n      Card to the <code><i>BackCardFace component</i></code>. For now, the\n      function will only reflect a console output when clicking on the card.`,\n    descriptionCode: `We called the <code><i>createEventDispatcher</code></i>\n      function in our <code><i>CardBack component</i></code>. When clicking on\n      our <code><i>CardBack component<code></i> on the DOM, the\n      <code><i>openCards</i></code> function that we have assigned with this\n      event is going to start its operation.`,\n    endStory: `When interacting with the cards on the Playground, the value on\n      the front of the card will be displayed.`,\n    image: `assets/components/Card/click-on-card.png`,\n    alternativeText: `user clicked on card`,\n    moreImage: `assets/components/Card/open-cards.gif`,\n    moreAlternativeText: `open cards on playground`,\n    id: \"cards-spin-effects\",\n  };\n\n  const requireCode = `\n    import { Writable, writable } from \"svelte/store\";\n\n    export const cardFlipperCapsule: Writable<number[]> = writable([]);\n  `;\n\n  const code = `\n    <script>  \n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n      import { cardFlipperCapsule } from \"../../../../Store/OpenedCards\";\n\n      export let pokemon;\n\n      const openCard = () => {\n        console.log(\"user clicked on card\");\n      };\n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div class=\"flipper\">\n        <BackCardFace {pokemon} on:openCard={openCard} />\n        <FrontCardFace {pokemon} />\n      </div>\n    </main>\n\n    <style>\n      .flip-container {\n        perspective: 1000px;\n        transform-style: preserve-3d;\n        display: inline-block;\n        margin: 5px;\n        width: 100px;\n        height: 100px;\n      }\n\n      .flipper {\n        position: relative;\n      }\n    </style>\n  `;\n\n  const moreCode = `\n    <script>\n      import { createEventDispatcher } from \"svelte\";\n\n      export let pokemon;\n\n      const dispatch = createEventDispatcher();\n    <\\/script>\n\n    <div class=\"back\" on:click={() => dispatch(\"openCard\", pokemon)}>\n      <img\n        src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/0.png\"\n        class=\"single-poke\"\n        alt=\"card back on the playing field\"\n      />\n    </div>\n\n    <style>\n      .back {\n        width: 100px;\n        height: 100px;\n        backface-visibility: hidden;\n        transition: 0.6s;\n        transform-style: preserve-3d;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 2;\n        transform: rotateY(0deg);\n        border-radius: 11px;\n      }\n\n      .back:hover {\n        cursor: pointer;\n      }\n\n      .single-poke {\n        border-radius: 11px;\n        background: #fff;\n        box-shadow: 2px 2px 4px #8c8c8c;\n      }\n    </style>\n  `;\n\n  const otherCode = `\n    <script>\n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n      import { cardFlipperCapsule } from \"../../../../Store/OpenedCards\";\n\n      export let pokemon;\n\n      $: pokemonId = pokemon.id;\n      $: pokemonNo = pokemon.no;\n\n      const openCard = (card) => {\n        let { no, id } = card.detail;\n\n        $cardFlipperCapsule = [no, ...$cardFlipperCapsule];\n      };\n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div class=\"flipper\" class:hover={$cardFlipperCapsule.includes(pokemonNo)}>\n        <BackCardFace {pokemon} on:openCard={openCard} />\n        <FrontCardFace {pokemon} />\n      </div>\n    </main>\n\n    <style>\n      .flip-container {\n        perspective: 1000px;\n        transform-style: preserve-3d;\n        display: inline-block;\n        margin: 5px;\n        width: 100px;\n        height: 100px;\n      }\n\n      .flipper {\n        position: relative;\n      }\n    </style>`;\n\n  const requireTitle = `componenets > store > OpenedCards.ts`;\n  const title = `componenets > Playground > Cards > Card.svelte`;\n  const moreTitle = `componenets > Playground > Cards > CardBack.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.requireDescription} />\n  <CodeSyntax code={requireCode} title={requireTitle} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.codeExplanation} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <Paragraph text={article.descriptionCode} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax code={otherCode} {title} />\n  <Paragraph text={article.endStory} />\n  <Image\n    image={article.moreImage}\n    alternativeText={article.moreAlternativeText}\n  />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Card Matching`,\n    description: `Now that we can open all the cards, let's match the opened\n      cards with each other.`,\n    otherDescription: `In the previous section, we kept the cards that the user\n      clicked on a store value called <code><i>cardFlipperCapsule</i></code>.\n      We can access these values as we wish, update them and use them within the\n      structure we have constructed. Let's create 2 more store values, where we\n      can hold the cards that the user interacts with, as well as the cards that\n      are opened and matched.`,\n    moreDescription: `Store the 2 cards that carried out the click event in\n      <code><i>OpenCardsCapsule</i></code>. When the total number of data in\n      <code><i>OpenCardsCapsule</i></code> is equal to 2, let's check the id\n      values of the cards. In case of equality, let's keep the id value in\n      <code><i>catchEmAll</i></code>.`,\n    image: `assets/components/Card/matching-cards.gif`,\n    alternativeText: `Matching cards on the playground`,\n    id: \"card-matching\",\n  };\n\n  const code = `\n    import { Writable, writable } from \"svelte/store\";\n\n    export const cardFlipperCapsule: Writable<number[]> = writable([]);\n    export const openCardsCapsule: Writable<number[]> = writable([]);\n    export const catchEmAll: Writable<number[]> = writable([]);\n  `;\n\n  const moreCode = `\n    <script>\n      import FrontCardFace from \"./CardFront.svelte\";\n      import BackCardFace from \"./CardBack.svelte\";\n      import {\n        cardFlipperCapsule,\n        openCardsCapsule,\n        catchEmAll,\n      } from \"../../../../Store/OpenedCards\";\n\n      export let pokemon;\n\n      $: pokemonId = pokemon.id;\n      $: pokemonNo = pokemon.no;\n\n      const openCard = (card) => {\n        let getPokemonNo = card.detail.no;\n        let getPokemonId = card.detail.id;\n\n        $openCardsCapsule = [getPokemonId, ...$openCardsCapsule];\n        $cardFlipperCapsule = [getPokemonNo, ...$cardFlipperCapsule];\n\n        if ($openCardsCapsule.length >= 2) {\n          const firstOpenCard = $openCardsCapsule[0];\n          const secondOpenCard = $openCardsCapsule[1];\n\n          if (firstOpenCard === secondOpenCard) {\n            $catchEmAll = [firstOpenCard, ...$catchEmAll];\n          }\n        }\n      }\n    <\\/script>\n\n    <main class=\"flip-container\">\n      <div\n        class=\"flipper\"\n        class:hover={$cardFlipperCapsule.includes(pokemonNo) ||\n          $catchEmAll.includes(pokemonId)}\n      >\n        <BackCardFace {pokemon} on:openCard={openCard} />\n        <FrontCardFace {pokemon} />\n      </div>\n    </main>\n\n    <style>\n      .flip-container {\n        perspective: 1000px;\n        transform-style: preserve-3d;\n        display: inline-block;\n        margin: 5px;\n        width: 100px;\n        height: 100px;\n      }\n\n      .flipper {\n        position: relative;\n      }\n    </style>\n  `;\n\n  const title = `componenets > store > OpenedCards.ts`;\n  const moreTitle = `componenets > Playground > Cards > Card.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `Score & Level Updates`,\n    description: `Let's create setups such as the user to earn points with card\n      matching and to <code><i>level</i></code> up after all cards are\n      successfully matched. In addition to these, you can use sound or some\n      styling when the user opens cards or matches cards successfully to make\n      the game more fun. You can create a caption that congratulates the user\n      when all the cards are matched. In the structure we designed, we did not\n      take actions such as reducing the score or limiting the number of wrong\n      matches when the user matches the wrong cards. By doing these, you can\n      increase your gaming experience. We can continue from where we left off\n      with you..`,\n    otherDescription: `We want the user to earn points on cards that they can\n      match. For this, I am going to go to my <code><i>GameAction</i></code>\n      folder and create a new component.`,\n    anotherDescription: `Although we have not yet displayed the\n      <code><i>score</i></code> value on the interface, we can view it on the\n      console. We will follow a similar path in increasing the <b>level</b> as\n      we did in the <b>score</b>.`,\n    anAnotherDescription: ``, // 💩\n    moreDescription: `Go back to the game and try to match all the cards.. Did\n      you notice the error that occurred? After all the cards are matched, the\n      values in the <code><i>CardFront</i></code> appear within 1-2 seconds\n      before they are closed again. Let's try to prevent this.`,\n    descriptionCode: `The <code><i>LevelUp</i></code> function we just created\n      is very similar to the <code><i>ScoreUp</i></code> function. I defined the\n      <b>level store</b> value in setTimeOut before I set it. What we will do on\n      all the cards soon is to prevent the last pair of cards from closing later\n      than the previously opened 4 pairs of cards during the closing process of\n      the cards. Let's go back to our main <code><i>Card component</i></code>\n      and use the function we created.`,\n    codeExplanation: `We can use the <code><i>ScoreUp</i></code> function we\n      exported wherever we want. Let's call the function inside the condition\n      statement where we make the correct matching of the cards in the card\n      components.`,\n    otherCodeExplanation: `The <code><i>ScoreUp</i></code> component will be\n      constantly updated as <b>+1</b> when the user does the correct matches.`,\n    anotherMoreDescription: `Let's create a function called\n      <code><i>closeAllCards</i></code> in our <code><i>CloseOpenCards\n      component</i></code> and reset the store values we use in our\n      <code><i>Card component</i></code>.`,\n    image: `assets/components/Card/ScoreUp-Component.gif`,\n    anotherImage: `assets/components/Card/bug.png`,\n    moreImage: `<code><i>levelUp</i></code> fonksiyonumuzu closeAllCards \n      içerisinde çağırdığımızda bu hatanın önüne geçebiliriz.`,\n    alternativeText: `ScoreUp component`,\n    moreAlternativeText: `Bug when closing cards`,\n    id: \"score-and-level-updates\",\n  };\n\n  const code = `\n    <script context=\"module\">\n      import { score } from \"../../Store/Score\";\n\n      export let scoreUp = () => {\n        let getScore;\n\n        score.subscribe((callScore) => {\n          getScore = callScore;\n        })\n\n        let up = getScore + 1;\n\n        score.set(up);\n      }\n    <\\/script>\n  `;\n\n  const otherCode = `\n    <script>\n      ...\n      import { scoreUp } from \"../../../GameAction/ScoreUpdate.svelte\";\n      import { score } from \"../../../../Store/Score\"; \n      /*\n        * score değerinin nasıl güncellendiğini incelemek için Card bileşene\n        * import edelim.\n      */\n      ...\n\n      ...\n      if ($openCardsCapsule.length >= 2) {\n        const firstOpenCard = $openCardsCapsule[0];\n        const secondOpenCard = $openCardsCapsule[1];\n\n        if (firstOpenCard === secondOpenCard) {\n          $catchEmAll = [firstOpenCard, ...$catchEmAll];\n\n          scoreUp();\n\n          console.log(\"score=>\", $score);\n        }\n      }\n      ...\n    <\\/script>\n  `;\n\n  const oneMoreCode = `\n    <script>\n      import { level } from \"../../Store/Level\";\n\n      export const levelUp = () => {\n        let getLevel;\n\n        level.subscribe((callLevel) => {\n          getLevel = callLevel;\n        })\n        \n        let up = getLevel + 1;\n\n        setTimeout(level.set(up))\n      }\n    <\\/script>\n  `;\n\n  const moreCode = `\n    <script>\n      ...\n        import { levelUp } from \"../../../GameAction/levelUpdate.svelte\"\n      ...\n\n      ...\n      if ($openCardsCapsule.length >= 2) {\n        const firstOpenCard = $openCardsCapsule[0];\n        const secondOpenCard = $openCardsCapsule[1];\n\n        if (firstOpenCard === secondOpenCard) {\n          $catchEmAll = [firstOpenCard, ...$catchEmAll];\n\n          scoreUp();\n\n          console.log(\"score=>\", $score);\n\n          if ($catchEmAll.length === 5) {\n            levelUp();\n          }\n        }\n      }\n      ...\n    <\\/script>\n  `;\n\n  const anotherAnOneMoreCode = `\n      <script>\n        import {\n          openCardsCapsule,\n          cardFlipperCapsule,\n          catchEmAll,\n        } from \"../../store/OpenedCards\";\n\n        export const mismatchedCards = (flipTime) => {\n          setTimeout(() => {\n            cardFlipperCapsule.set([]);\n            openCardsCapsule.set([]);\n          }, flipTime);\n        };\n\n        export const closeAllCards = (flipTime, callback) => {\n          setTimeout(() => {\n            catchEmAll.set([]);\n            cardFlipperCapsule.set([]);\n            openCardsCapsule.set([]);\n\n            callback();\n          }, flipTime);\n        };\n      <\\/script>\n  `;\n\n  const title = `components > GameAction > ScoreUpdate.svelte`;\n  const otherTitle = `components > Playground > Cards > Card.svelte`;\n  const oneMoreTitle = `components > GameAction > LevelUpdate.svelte`;\n  const moreTitle = `components > GameAction > CloseOpenCards.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.codeExplanation} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Paragraph text={article.otherCodeExplanation} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Paragraph text={article.anotherDescription} />\n  <Paragraph text={article.anAnotherDescription} />\n  <CodeSyntax code={oneMoreCode} title={oneMoreTitle} />\n  <Paragraph text={article.descriptionCode} />\n  <CodeSyntax code={moreCode} title={otherTitle} />\n  <Paragraph text={article.moreDescription} />\n  <Image\n    image={article.anotherImage}\n    alternativeText={article.moreAlternativeText}\n  />\n  <Paragraph text={article.anotherMoreDescription} />\n  <CodeSyntax code={anotherAnOneMoreCode} title={moreTitle} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import Image from \"./Section/Templates/Image.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import CodeSyntax from \"./Section/Templates/CodeDescription/CodeSyntax.svelte\";\n\n  const article = {\n    head: `User Detail Componenti`,\n    description: `In our last section, let's create a component with\n      <code><i>Score and Level<i></code> that displays the user's name and\n        selected avatar on the game interface at the start of the game.`,\n    requireDescription: `Components klasörümüzde GameElements isminde yeni bir \n      klasör oluşturalım. Daha önce <code><i>score ve level</i></code> \n      değerlerimizi kapsayan bir bileşen oluşturmadığımız için bu bileşenleri \n      burada oluşturacağız.`,\n    otherDescription: `We may define simple style properties while creating\n      these components.`,\n    moreDescription: `We used the same code structure in the components, the\n      only thing that changed was the store values we imported. By defining the\n      store value you want to use in a single component, you can reach the same\n      result as the structure we used by defining it in props. Let's create the\n      component to display the user's name.`,\n    codeExplanation: `By accessing the <code><i>UserInfo class</i></code> that\n      we used when creating the user, we invite the <b>Mr. name</b> defined in\n      it to the stage. Let's display this value in HTML. We also need a\n      component that is necessary for us to display the avatar that the user has\n      selected.`,\n    anotherDescription: `Let's keep these components inside a component called\n      <code><i>UserDetail</i></code> as a common component.`,\n    oneMoreDescription: `When we call our <code><i>UserDetail\n      component</i></code> on <code><i>Playground</i></code>, we can add the\n      information of the user we want to the playground. If you remember, my\n      friend, we gave the <b>isStart</b> value in <code><i>Playground</i></code>\n      as false in order to examine the development we made in the <code><i>Card\n      component</i></code>. When we fix this, we are ready to play.`,\n    endStory: `With this structure, we come to the end of our development. You\n      can access the resources, I researched about Svelte below. Forgive me if I\n      made any mistakes.. send me an e-mail to kahilkubilay@gmail.com, so we can\n      fix it together. Hope to see you on the resource where I can do better\n      development on <code><i>Svelte</i></code>, be nice to yourself 🍷`,\n    image: `assets/end-story-User-select.png`,\n    moreImage: `assets/end-story-playground.png`,\n    alternativeText: `user component at the end of the story`,\n    moreAlternativeText: `playground component at the end of the story`,\n    id: \"user-detail-component\",\n  };\n\n  const code = `\n    <script>\n      import { level } from \"../../Store/Level\";\n    <\\/script>\n\n    <p>level: {$level}</p>\n\n    <style>\n      p {\n        display: inline-block;\n        width: 35%;\n        border-radius: 10px;\n        padding: 6px 8px;\n        font-size: 18px;\n        border: 2px solid black;\n        background-color: purple;\n        color: white;\n        font-weight: bold;\n      }\n    </style>\n  `;\n\n  const moreCode = `\n    <script>\n      import { score } from \"../../Store/Score\";\n    <\\/script>\n\n    <p>score: {$score}</p>\n\n    <style>\n      p {\n        display: inline-block;\n        width: 35%;\n        border-radius: 10px;\n        padding: 6px 8px;\n        font-size: 18px;\n        border: 2px solid black;\n        background-color: purple;\n        color: white;\n        font-weight: bold;\n      }\n    </style>\n  `;\n\n  const otherCode = `\n    <script>\n      import { userInfo } from \"../../../store/User\";\n\n      const { name } = userInfo;\n    <\\/script>\n\n    <h3>{$name}</h3>\n\n    <style>\n      h3 {\n        display: block;\n        margin: 0px auto;\n        border-radius: 10px;\n        padding: 2px 0;\n        font-size: 24px;\n      }\n    </style>\n  `;\n\n  const anotherCode = `\n    <script>\n      import { userInfo } from \"../../../Store/User\";\n\n      const { avatar } = userInfo;\n      const setAvatar = \\`/asset/images/\\${$avatar}.jpg\\`;\n    <\\/script>\n\n\n    <img src={setAvatar} title=\"user selected avatar\" />\n\n    <style>\n      img {\n        width: 100px;\n        border-radius: 100px;\n      }\n    </style>`;\n\n  const anotherOneCode = `\n    <script>\n      import Score from \"../GameElements/Score.svelte\";\n      import Level from \"../GameElements/Level.svelte\";\n      import UserSelectAvatar from \"./Avatars/UserSelectAvatar.svelte\";\n      import UserSelectName from \"./Name/UserSelectName.svelte\";\n    <\\/script>\n\n    <main>\n      <UserSelectAvatar />\n      <UserSelectName />\n      <Score />\n      <Level />\n    </main>\n\n    <style>\n      main {\n        width: 300px;\n        margin-top: 20px;\n        margin: 20px auto;\n        padding: 20px 10px;\n        background-color: #f5f5f5;\n        border-radius: 6px;\n        display: block;\n      }\n    </style>\n  `;\n\n  const title = `components > GameElements > Level.svelte`;\n  const moreTitle = `components > GameElements > Score.svelte`;\n  const otherTitle = `components > User > name > UserSelectName.svelte`;\n  const anotherTitle = `components > User > Avatar > UserSelectAvatar.svelte`;\n  const anotherOneTitle = `components > User > Userdetail.svelte`;\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Paragraph text={article.description} />\n  <CodeSyntax {code} {title} />\n  <Paragraph text={article.otherDescription} />\n  <CodeSyntax code={moreCode} title={moreTitle} />\n  <Paragraph text={article.moreDescription} />\n  <CodeSyntax code={otherCode} title={otherTitle} />\n  <Paragraph text={article.codeExplanation} />\n  <CodeSyntax code={anotherCode} title={anotherTitle} />\n  <Paragraph text={article.anotherDescription} />\n  <CodeSyntax code={anotherOneCode} title={anotherOneTitle} />\n  <Paragraph text={article.oneMoreDescription} />\n  <Image image={article.image} alternativeText={article.alternativeText} />\n  <Image\n    image={article.moreImage}\n    alternativeText={article.moreAlternativeText}\n  />\n  <Paragraph text={article.endStory} />\n</article>\n","<script>\n  import Header from \"./Section/Templates/Header.svelte\";\n  import Paragraph from \"./Section/Templates/Paragraph.svelte\";\n  import AccessArticle from \"./Section/Templates/AccessArticle.svelte\";\n  import Matter from \"./Section/Templates/Matter.svelte\";\n\n  const article = {\n    head: `References`,\n    material: [\n      `https://svelte.dev/blog/svelte-3-rethinking-reactivity`,\n      `https://svelte.dev/examples/hello-world`,\n      `https://svelte.dev/tutorial/basics`,\n      `https://svelte.dev/docs`,\n      `https://svelte.dev/blog`,\n      `https://svelte.dev/blog/svelte-3-rethinking-reactivity`,\n      `https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript`,\n      `https://typeofnan.dev/how-to-set-up-a-svelte-app-with-rollup/`,\n      `https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next`,\n      `https://betterprogramming.pub/6-ways-to-do-component-communications-in-svelte-b3f2a483913c`,\n      `https://livebook.manning.com/book/svelte-and-sapper-in-action/chapter-5/v-3/`,\n    ],\n    id: \"references\",\n  };\n</script>\n\n<article>\n  <AccessArticle link={article.id} />\n  <Header head={article.head} />\n  <Matter matter={article.material} />\n</article>\n","<script>\n  import Docs from \"../Docs/Documentation.svelte\";\n  import * as ContentMap from \"./content.json\";\n\n  let { English } = ContentMap.Headers;\n\n  let svelteLogo = \"assets/svelte-logo.png\";\n</script>\n\n<main class=\"container\">\n  <Docs />\n\n  <div class=\"content-map\">\n    <img src={svelteLogo} alt=\"Svelte logo\" class=\"logo\" />\n    <ul>\n      {#each English as ContentMap}\n        <li>\n          <a href={ContentMap.target}\n            >{ContentMap.title[0].toUpperCase() + ContentMap.title.slice(1)}</a\n          >\n        </li>\n      {/each}\n    </ul>\n  </div>\n</main>\n\n<style>\n  main {\n    width: 100%;\n    margin: auto;\n    background-color: #f5f5f5;\n    padding: 5px;\n  }\n\n  @media screen and (min-width: 800px) {\n    main {\n      width: 50%;\n      padding: 10px 50px;\n    }\n  }\n\n  .content-map {\n    position: fixed;\n    width: 18%;\n    top: 11.3%;\n    right: 2%;\n    margin-left: 40px;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 4px;\n    background-color: #f5f5f5;\n    border-width: 0 5px 3px 0;\n    border-style: solid;\n    border-color: #ff3e00;\n  }\n\n  .content-map:hover {\n    border-width: 0;\n  }\n\n  .content-map:hover > ul {\n    overflow: visible;\n    height: 100%;\n  }\n\n  .content-map ul {\n    padding: 0;\n    margin: 0 0 15px 0;\n    height: 0;\n    overflow: hidden;\n  }\n\n  .content-map li {\n    list-style-type: none;\n    padding: 3px 20px;\n  }\n\n  a {\n    font-size: 15px;\n    text-decoration: none;\n    color: #000;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  .logo {\n    width: 50px;\n    margin: 10px auto;\n  }\n\n  @media screen and (max-width: 800px) {\n    .content-map {\n      display: none;\n    }\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let pages, activePage;\n</script>\n\n<div class=\"contents\">\n  <ul>\n    {#each pages as page}\n      <li on:click={() => dispatch(\"switchPage\", page)}>\n        <div class:active={page === activePage}>\n          {page}\n        </div>\n      </li>\n    {/each}\n  </ul>\n</div>\n\n<style>\n  .contents {\n    width: 100%;\n    border-radius: 5px;\n    margin: 10px auto;\n  }\n\n  ul {\n    display: flex;\n    justify-content: center;\n    text-align: center;\n  }\n\n  li {\n    font-size: 23px;\n    list-style-type: none;\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 800px) {\n    .contents {\n      width: 900px;\n      padding: 25px 50px;\n    }\n\n    li {\n      margin-right: 6px;\n      color: #000;\n    }\n\n    li:first-child {\n      border-right: 2px solid black;\n      padding-right: 6px;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    .contents {\n      border: 1px solid black;\n      margin-top: 0;\n    }\n\n    li {\n      width: 100%;\n      background-color: rebeccapurple;\n      color: #fff;\n    }\n\n    li:first-child {\n      border-right: 2px solid #fff;\n    }\n  }\n</style>\n","<script>\n  import Playground from \"./components/Playground/Wrapper/Playground.svelte\";\n  import About from \"./components/Info/about.svelte\";\n  import Pages from \"./components/shared/Pages.svelte\";\n\n  let pages = [\"about\", \"game\"];\n  let activePage = \"about\";\n\n  const switchPage = (event) => {\n    activePage = event.detail;\n  };\n</script>\n\n<main>\n  <Pages {pages} {activePage} on:switchPage={switchPage} />\n\n  {#if activePage === \"about\"}\n    <About />\n  {:else if activePage === \"game\"}\n    <Playground />\n  {/if}\n</main>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","slice","exclude_internal_props","props","result","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","p","set_current_component","createEventDispatcher","Error","get_current_component","type","detail","cancelable","bubbles","createEvent","initCustomEvent","custom_event","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","div","dispatch","pokemon","img","img_src_value","$$invalidate","pokemonId","id","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","catchEmAll","openCardsCapsule","cardFlipperCapsule","score","level","levelUp","getLevel","callLevel","up","setTimeout","includes","main","pokemonNo","no","card","getPokemonNo","getPokemonId","$openCardsCapsule","$cardFlipperCapsule","firstOpenCard","$catchEmAll","getScore","callScore","scoreUp","flipTime","mismatchedCards","userInfo","avatar","isStart","$name","userSelectAvatar","avatarName","match","$avatar","each_blocks","div2","button","div0","span0","div1","span1","isAvatarEmpty","isNameEmpty","$isStart","console","log","h3","setAttributeNS","svg","defs","pattern","image","circle","setAvatar","scoreDegree","degreeOfScore","$score","userScore","dashOffsetDegree","pokemonList","list","maxNumberReachedOnRange","minNumberReachedOnRange","$level","mixedListOfPokemon","shakeList","duplicateList","concat","totalNumberRange","counter","randomNumb","Math","trunc","random","shuffle","h2","head","textData","alternativeText","span","link","accessarticle","AccessArticle","header","Header","description","otherDescription","otherImage","otherImageAlternativeText","article_1","t_value","code","title","window","Prism","warn","manual","_self","lang","uniqueId","plainTextGrammar","_","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","isArray","replace","prototype","toString","objId","defineProperty","clone","deepClone","visited","key","hasOwnProperty","v","getLanguage","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","currentScript","err","stack","scripts","getElementsByTagName","isActive","defaultActivation","contains","languages","plain","plaintext","txt","extend","redef","inside","before","grammar","token","newToken","old","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","elements","apply","querySelectorAll","highlightElement","parent","textContent","insertHighlightedCode","highlightedCode","hasAttribute","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","matchGrammar","array","next","tail","toArray","all","matchedStr","matchPattern","pos","lookbehind","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","to","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","classes","attributes","aliases","join","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","WorkerGlobalScope","self","module","exports","markup","comment","prolog","doctype","string","punctuation","cdata","namespace","entity","tagName","includedCdataInside","def","attrName","mathml","xml","ssml","atom","rss","css","atrule","rule","keyword","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","regex","parameter","constant","hashbang","interpolation","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","py","rb","ps1","psm1","sh","bat","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","extension","autoloader","loadLanguages","success","error","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","loadFile","range","Number","comma","end","undefined","parseRange","lines","split","max","min","String","fileHighlight","logged","arguments","blocks","slot_ctx","create_if_block","style","removeProperty","setProperty","code0","code1","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","svelte","each","prism","_prism","globalConfig","x","formattedCode","transform","body","highlightCode","$$value","subheader","SubHeader","codeExplanation","anotherDescription","moreDescription","oneMoreDescription","oneAnotherMoreDescription","anotherImage","anotherAlternativeText","anAnotherDescription","descriptionCode","moreAnotherDescription","otherCodeExplanation","endStory","anotherOneImage","moreImage","moreAlternativeText","anotherOneAlternativeText","childtitle","ChildTitle","anotherAnDescription","li","html_tag","raw_value","ul","matter","material","anotherMoreDescription","anotherOneMoreDescription","t0_value","command","li0","li1","t0","terms","oneLineDescription","moreCodeExplanation","requireDescription","toUpperCase","a_href_value","svelteLogo","English","ContentMap.Headers","pages","activePage","page"],"mappings":"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"}